#pragma warning disable 1591
//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.225
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace SCM_CangJi.DAL
{
	using System.Data.Linq;
	using System.Data.Linq.Mapping;
	using System.Data;
	using System.Collections.Generic;
	using System.Reflection;
	using System.Linq;
	using System.Linq.Expressions;
	using System.ComponentModel;
	using System;
	
	
	[global::System.Data.Linq.Mapping.DatabaseAttribute(Name="SCM_CangJi")]
	public partial class CangJiDataDataContext : System.Data.Linq.DataContext
	{
		
		private static System.Data.Linq.Mapping.MappingSource mappingSource = new AttributeMappingSource();
		
    #region Extensibility Method Definitions
    partial void OnCreated();
    partial void Insertaspnet_UsersInRole(aspnet_UsersInRole instance);
    partial void Updateaspnet_UsersInRole(aspnet_UsersInRole instance);
    partial void Deleteaspnet_UsersInRole(aspnet_UsersInRole instance);
    partial void Insertaspnet_User(aspnet_User instance);
    partial void Updateaspnet_User(aspnet_User instance);
    partial void Deleteaspnet_User(aspnet_User instance);
    partial void Insertaspnet_Role(aspnet_Role instance);
    partial void Updateaspnet_Role(aspnet_Role instance);
    partial void Deleteaspnet_Role(aspnet_Role instance);
    partial void Insertaspnet_Profile(aspnet_Profile instance);
    partial void Updateaspnet_Profile(aspnet_Profile instance);
    partial void Deleteaspnet_Profile(aspnet_Profile instance);
    partial void Insertaspnet_Membership(aspnet_Membership instance);
    partial void Updateaspnet_Membership(aspnet_Membership instance);
    partial void Deleteaspnet_Membership(aspnet_Membership instance);
    partial void Insertaspnet_Application(aspnet_Application instance);
    partial void Updateaspnet_Application(aspnet_Application instance);
    partial void Deleteaspnet_Application(aspnet_Application instance);
    partial void InsertCurrencyUnit(CurrencyUnit instance);
    partial void UpdateCurrencyUnit(CurrencyUnit instance);
    partial void DeleteCurrencyUnit(CurrencyUnit instance);
    partial void InsertContact(Contact instance);
    partial void UpdateContact(Contact instance);
    partial void DeleteContact(Contact instance);
    partial void InsertProductType(ProductType instance);
    partial void UpdateProductType(ProductType instance);
    partial void DeleteProductType(ProductType instance);
    partial void InsertCompany(Company instance);
    partial void UpdateCompany(Company instance);
    partial void DeleteCompany(Company instance);
    partial void InsertDeliverAddress(DeliverAddress instance);
    partial void UpdateDeliverAddress(DeliverAddress instance);
    partial void DeleteDeliverAddress(DeliverAddress instance);
    partial void InsertDeliveryOrder(DeliveryOrder instance);
    partial void UpdateDeliveryOrder(DeliveryOrder instance);
    partial void DeleteDeliveryOrder(DeliveryOrder instance);
    partial void InsertOrderNumber(OrderNumber instance);
    partial void UpdateOrderNumber(OrderNumber instance);
    partial void DeleteOrderNumber(OrderNumber instance);
    partial void InsertImportProfile(ImportProfile instance);
    partial void UpdateImportProfile(ImportProfile instance);
    partial void DeleteImportProfile(ImportProfile instance);
    partial void InsertStorageArea(StorageArea instance);
    partial void UpdateStorageArea(StorageArea instance);
    partial void DeleteStorageArea(StorageArea instance);
    partial void InsertRackArea(RackArea instance);
    partial void UpdateRackArea(RackArea instance);
    partial void DeleteRackArea(RackArea instance);
    partial void InsertRackType(RackType instance);
    partial void UpdateRackType(RackType instance);
    partial void DeleteRackType(RackType instance);
    partial void InsertStorage(Storage instance);
    partial void UpdateStorage(Storage instance);
    partial void DeleteStorage(Storage instance);
    partial void InsertInputOrder(InputOrder instance);
    partial void UpdateInputOrder(InputOrder instance);
    partial void DeleteInputOrder(InputOrder instance);
    partial void InsertInputOrderDetail(InputOrderDetail instance);
    partial void UpdateInputOrderDetail(InputOrderDetail instance);
    partial void DeleteInputOrderDetail(InputOrderDetail instance);
    partial void InsertProduct(Product instance);
    partial void UpdateProduct(Product instance);
    partial void DeleteProduct(Product instance);
    partial void InsertAssignedDeliveryOrderDetail(AssignedDeliveryOrderDetail instance);
    partial void UpdateAssignedDeliveryOrderDetail(AssignedDeliveryOrderDetail instance);
    partial void DeleteAssignedDeliveryOrderDetail(AssignedDeliveryOrderDetail instance);
    partial void InsertStorageRack(StorageRack instance);
    partial void UpdateStorageRack(StorageRack instance);
    partial void DeleteStorageRack(StorageRack instance);
    partial void InsertProductStorage(ProductStorage instance);
    partial void UpdateProductStorage(ProductStorage instance);
    partial void DeleteProductStorage(ProductStorage instance);
    partial void InsertProductStorageChange(ProductStorageChange instance);
    partial void UpdateProductStorageChange(ProductStorageChange instance);
    partial void DeleteProductStorageChange(ProductStorageChange instance);
    partial void InsertDeliveryOrderDetail(DeliveryOrderDetail instance);
    partial void UpdateDeliveryOrderDetail(DeliveryOrderDetail instance);
    partial void DeleteDeliveryOrderDetail(DeliveryOrderDetail instance);
    #endregion
		
		public CangJiDataDataContext() : 
				base(global::SCM_CangJi.DAL.Properties.Settings.Default.SCM_CangJiConnectionString, mappingSource)
		{
			OnCreated();
		}
		
		public CangJiDataDataContext(string connection) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public CangJiDataDataContext(System.Data.IDbConnection connection) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public CangJiDataDataContext(string connection, System.Data.Linq.Mapping.MappingSource mappingSource) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public CangJiDataDataContext(System.Data.IDbConnection connection, System.Data.Linq.Mapping.MappingSource mappingSource) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public System.Data.Linq.Table<aspnet_UsersInRole> aspnet_UsersInRoles
		{
			get
			{
				return this.GetTable<aspnet_UsersInRole>();
			}
		}
		
		public System.Data.Linq.Table<aspnet_User> aspnet_Users
		{
			get
			{
				return this.GetTable<aspnet_User>();
			}
		}
		
		public System.Data.Linq.Table<aspnet_Role> aspnet_Roles
		{
			get
			{
				return this.GetTable<aspnet_Role>();
			}
		}
		
		public System.Data.Linq.Table<aspnet_Profile> aspnet_Profiles
		{
			get
			{
				return this.GetTable<aspnet_Profile>();
			}
		}
		
		public System.Data.Linq.Table<aspnet_Membership> aspnet_Memberships
		{
			get
			{
				return this.GetTable<aspnet_Membership>();
			}
		}
		
		public System.Data.Linq.Table<aspnet_Application> aspnet_Applications
		{
			get
			{
				return this.GetTable<aspnet_Application>();
			}
		}
		
		public System.Data.Linq.Table<CurrencyUnit> CurrencyUnits
		{
			get
			{
				return this.GetTable<CurrencyUnit>();
			}
		}
		
		public System.Data.Linq.Table<Contact> Contacts
		{
			get
			{
				return this.GetTable<Contact>();
			}
		}
		
		public System.Data.Linq.Table<ProductType> ProductTypes
		{
			get
			{
				return this.GetTable<ProductType>();
			}
		}
		
		public System.Data.Linq.Table<Company> Companies
		{
			get
			{
				return this.GetTable<Company>();
			}
		}
		
		public System.Data.Linq.Table<DeliverAddress> DeliverAddresses
		{
			get
			{
				return this.GetTable<DeliverAddress>();
			}
		}
		
		public System.Data.Linq.Table<DeliveryOrder> DeliveryOrders
		{
			get
			{
				return this.GetTable<DeliveryOrder>();
			}
		}
		
		public System.Data.Linq.Table<OrderNumber> OrderNumbers
		{
			get
			{
				return this.GetTable<OrderNumber>();
			}
		}
		
		public System.Data.Linq.Table<ImportProfile> ImportProfiles
		{
			get
			{
				return this.GetTable<ImportProfile>();
			}
		}
		
		public System.Data.Linq.Table<View_ProductStorage> View_ProductStorages
		{
			get
			{
				return this.GetTable<View_ProductStorage>();
			}
		}
		
		public System.Data.Linq.Table<StorageArea> StorageAreas
		{
			get
			{
				return this.GetTable<StorageArea>();
			}
		}
		
		public System.Data.Linq.Table<RackArea> RackAreas
		{
			get
			{
				return this.GetTable<RackArea>();
			}
		}
		
		public System.Data.Linq.Table<RackType> RackTypes
		{
			get
			{
				return this.GetTable<RackType>();
			}
		}
		
		public System.Data.Linq.Table<Storage> Storages
		{
			get
			{
				return this.GetTable<Storage>();
			}
		}
		
		public System.Data.Linq.Table<InputOrder> InputOrders
		{
			get
			{
				return this.GetTable<InputOrder>();
			}
		}
		
		public System.Data.Linq.Table<InputOrderDetail> InputOrderDetails
		{
			get
			{
				return this.GetTable<InputOrderDetail>();
			}
		}
		
		public System.Data.Linq.Table<VewAssingedDeliveryOrderDetail> VewAssingedDeliveryOrderDetails
		{
			get
			{
				return this.GetTable<VewAssingedDeliveryOrderDetail>();
			}
		}
		
		public System.Data.Linq.Table<Product> Products
		{
			get
			{
				return this.GetTable<Product>();
			}
		}
		
		public System.Data.Linq.Table<AssignedDeliveryOrderDetail> AssignedDeliveryOrderDetails
		{
			get
			{
				return this.GetTable<AssignedDeliveryOrderDetail>();
			}
		}
		
		public System.Data.Linq.Table<StorageRack> StorageRacks
		{
			get
			{
				return this.GetTable<StorageRack>();
			}
		}
		
		public System.Data.Linq.Table<ProductStorage> ProductStorages
		{
			get
			{
				return this.GetTable<ProductStorage>();
			}
		}
		
		public System.Data.Linq.Table<ProductStorageChange> ProductStorageChanges
		{
			get
			{
				return this.GetTable<ProductStorageChange>();
			}
		}
		
		public System.Data.Linq.Table<DeliveryOrderDetail> DeliveryOrderDetails
		{
			get
			{
				return this.GetTable<DeliveryOrderDetail>();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.aspnet_UsersInRoles")]
	public partial class aspnet_UsersInRole : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private System.Guid _UserId;
		
		private System.Guid _RoleId;
		
		private EntityRef<aspnet_User> _aspnet_User;
		
		private EntityRef<aspnet_Role> _aspnet_Role;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnUserIdChanging(System.Guid value);
    partial void OnUserIdChanged();
    partial void OnRoleIdChanging(System.Guid value);
    partial void OnRoleIdChanged();
    #endregion
		
		public aspnet_UsersInRole()
		{
			this._aspnet_User = default(EntityRef<aspnet_User>);
			this._aspnet_Role = default(EntityRef<aspnet_Role>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_UserId", DbType="UniqueIdentifier NOT NULL", IsPrimaryKey=true)]
		public System.Guid UserId
		{
			get
			{
				return this._UserId;
			}
			set
			{
				if ((this._UserId != value))
				{
					if (this._aspnet_User.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnUserIdChanging(value);
					this.SendPropertyChanging();
					this._UserId = value;
					this.SendPropertyChanged("UserId");
					this.OnUserIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_RoleId", DbType="UniqueIdentifier NOT NULL", IsPrimaryKey=true)]
		public System.Guid RoleId
		{
			get
			{
				return this._RoleId;
			}
			set
			{
				if ((this._RoleId != value))
				{
					if (this._aspnet_Role.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnRoleIdChanging(value);
					this.SendPropertyChanging();
					this._RoleId = value;
					this.SendPropertyChanged("RoleId");
					this.OnRoleIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="aspnet_User_aspnet_UsersInRole", Storage="_aspnet_User", ThisKey="UserId", OtherKey="UserId", IsForeignKey=true)]
		public aspnet_User aspnet_User
		{
			get
			{
				return this._aspnet_User.Entity;
			}
			set
			{
				aspnet_User previousValue = this._aspnet_User.Entity;
				if (((previousValue != value) 
							|| (this._aspnet_User.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._aspnet_User.Entity = null;
						previousValue.aspnet_UsersInRoles.Remove(this);
					}
					this._aspnet_User.Entity = value;
					if ((value != null))
					{
						value.aspnet_UsersInRoles.Add(this);
						this._UserId = value.UserId;
					}
					else
					{
						this._UserId = default(System.Guid);
					}
					this.SendPropertyChanged("aspnet_User");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="aspnet_Role_aspnet_UsersInRole", Storage="_aspnet_Role", ThisKey="RoleId", OtherKey="RoleId", IsForeignKey=true)]
		public aspnet_Role aspnet_Role
		{
			get
			{
				return this._aspnet_Role.Entity;
			}
			set
			{
				aspnet_Role previousValue = this._aspnet_Role.Entity;
				if (((previousValue != value) 
							|| (this._aspnet_Role.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._aspnet_Role.Entity = null;
						previousValue.aspnet_UsersInRoles.Remove(this);
					}
					this._aspnet_Role.Entity = value;
					if ((value != null))
					{
						value.aspnet_UsersInRoles.Add(this);
						this._RoleId = value.RoleId;
					}
					else
					{
						this._RoleId = default(System.Guid);
					}
					this.SendPropertyChanged("aspnet_Role");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.aspnet_Users")]
	public partial class aspnet_User : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private System.Guid _ApplicationId;
		
		private System.Guid _UserId;
		
		private string _UserName;
		
		private string _LoweredUserName;
		
		private string _MobileAlias;
		
		private bool _IsAnonymous;
		
		private System.DateTime _LastActivityDate;
		
		private EntitySet<aspnet_UsersInRole> _aspnet_UsersInRoles;
		
		private EntityRef<aspnet_Profile> _aspnet_Profile;
		
		private EntityRef<aspnet_Membership> _aspnet_Membership;
		
		private EntityRef<aspnet_Application> _aspnet_Application;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnApplicationIdChanging(System.Guid value);
    partial void OnApplicationIdChanged();
    partial void OnUserIdChanging(System.Guid value);
    partial void OnUserIdChanged();
    partial void OnUserNameChanging(string value);
    partial void OnUserNameChanged();
    partial void OnLoweredUserNameChanging(string value);
    partial void OnLoweredUserNameChanged();
    partial void OnMobileAliasChanging(string value);
    partial void OnMobileAliasChanged();
    partial void OnIsAnonymousChanging(bool value);
    partial void OnIsAnonymousChanged();
    partial void OnLastActivityDateChanging(System.DateTime value);
    partial void OnLastActivityDateChanged();
    #endregion
		
		public aspnet_User()
		{
			this._aspnet_UsersInRoles = new EntitySet<aspnet_UsersInRole>(new Action<aspnet_UsersInRole>(this.attach_aspnet_UsersInRoles), new Action<aspnet_UsersInRole>(this.detach_aspnet_UsersInRoles));
			this._aspnet_Profile = default(EntityRef<aspnet_Profile>);
			this._aspnet_Membership = default(EntityRef<aspnet_Membership>);
			this._aspnet_Application = default(EntityRef<aspnet_Application>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ApplicationId", DbType="UniqueIdentifier NOT NULL")]
		public System.Guid ApplicationId
		{
			get
			{
				return this._ApplicationId;
			}
			set
			{
				if ((this._ApplicationId != value))
				{
					if (this._aspnet_Application.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnApplicationIdChanging(value);
					this.SendPropertyChanging();
					this._ApplicationId = value;
					this.SendPropertyChanged("ApplicationId");
					this.OnApplicationIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_UserId", DbType="UniqueIdentifier NOT NULL", IsPrimaryKey=true)]
		public System.Guid UserId
		{
			get
			{
				return this._UserId;
			}
			set
			{
				if ((this._UserId != value))
				{
					this.OnUserIdChanging(value);
					this.SendPropertyChanging();
					this._UserId = value;
					this.SendPropertyChanged("UserId");
					this.OnUserIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_UserName", DbType="NVarChar(256) NOT NULL", CanBeNull=false)]
		public string UserName
		{
			get
			{
				return this._UserName;
			}
			set
			{
				if ((this._UserName != value))
				{
					this.OnUserNameChanging(value);
					this.SendPropertyChanging();
					this._UserName = value;
					this.SendPropertyChanged("UserName");
					this.OnUserNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_LoweredUserName", DbType="NVarChar(256) NOT NULL", CanBeNull=false)]
		public string LoweredUserName
		{
			get
			{
				return this._LoweredUserName;
			}
			set
			{
				if ((this._LoweredUserName != value))
				{
					this.OnLoweredUserNameChanging(value);
					this.SendPropertyChanging();
					this._LoweredUserName = value;
					this.SendPropertyChanged("LoweredUserName");
					this.OnLoweredUserNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MobileAlias", DbType="NVarChar(16)")]
		public string MobileAlias
		{
			get
			{
				return this._MobileAlias;
			}
			set
			{
				if ((this._MobileAlias != value))
				{
					this.OnMobileAliasChanging(value);
					this.SendPropertyChanging();
					this._MobileAlias = value;
					this.SendPropertyChanged("MobileAlias");
					this.OnMobileAliasChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IsAnonymous", DbType="Bit NOT NULL")]
		public bool IsAnonymous
		{
			get
			{
				return this._IsAnonymous;
			}
			set
			{
				if ((this._IsAnonymous != value))
				{
					this.OnIsAnonymousChanging(value);
					this.SendPropertyChanging();
					this._IsAnonymous = value;
					this.SendPropertyChanged("IsAnonymous");
					this.OnIsAnonymousChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_LastActivityDate", DbType="DateTime NOT NULL")]
		public System.DateTime LastActivityDate
		{
			get
			{
				return this._LastActivityDate;
			}
			set
			{
				if ((this._LastActivityDate != value))
				{
					this.OnLastActivityDateChanging(value);
					this.SendPropertyChanging();
					this._LastActivityDate = value;
					this.SendPropertyChanged("LastActivityDate");
					this.OnLastActivityDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="aspnet_User_aspnet_UsersInRole", Storage="_aspnet_UsersInRoles", ThisKey="UserId", OtherKey="UserId")]
		public EntitySet<aspnet_UsersInRole> aspnet_UsersInRoles
		{
			get
			{
				return this._aspnet_UsersInRoles;
			}
			set
			{
				this._aspnet_UsersInRoles.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="aspnet_User_aspnet_Profile", Storage="_aspnet_Profile", ThisKey="UserId", OtherKey="UserId", IsUnique=true, IsForeignKey=false)]
		public aspnet_Profile aspnet_Profile
		{
			get
			{
				return this._aspnet_Profile.Entity;
			}
			set
			{
				aspnet_Profile previousValue = this._aspnet_Profile.Entity;
				if (((previousValue != value) 
							|| (this._aspnet_Profile.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._aspnet_Profile.Entity = null;
						previousValue.aspnet_User = null;
					}
					this._aspnet_Profile.Entity = value;
					if ((value != null))
					{
						value.aspnet_User = this;
					}
					this.SendPropertyChanged("aspnet_Profile");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="aspnet_User_aspnet_Membership", Storage="_aspnet_Membership", ThisKey="UserId", OtherKey="UserId", IsUnique=true, IsForeignKey=false)]
		public aspnet_Membership aspnet_Membership
		{
			get
			{
				return this._aspnet_Membership.Entity;
			}
			set
			{
				aspnet_Membership previousValue = this._aspnet_Membership.Entity;
				if (((previousValue != value) 
							|| (this._aspnet_Membership.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._aspnet_Membership.Entity = null;
						previousValue.aspnet_User = null;
					}
					this._aspnet_Membership.Entity = value;
					if ((value != null))
					{
						value.aspnet_User = this;
					}
					this.SendPropertyChanged("aspnet_Membership");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="aspnet_Application_aspnet_User", Storage="_aspnet_Application", ThisKey="ApplicationId", OtherKey="ApplicationId", IsForeignKey=true)]
		public aspnet_Application aspnet_Application
		{
			get
			{
				return this._aspnet_Application.Entity;
			}
			set
			{
				aspnet_Application previousValue = this._aspnet_Application.Entity;
				if (((previousValue != value) 
							|| (this._aspnet_Application.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._aspnet_Application.Entity = null;
						previousValue.aspnet_Users.Remove(this);
					}
					this._aspnet_Application.Entity = value;
					if ((value != null))
					{
						value.aspnet_Users.Add(this);
						this._ApplicationId = value.ApplicationId;
					}
					else
					{
						this._ApplicationId = default(System.Guid);
					}
					this.SendPropertyChanged("aspnet_Application");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_aspnet_UsersInRoles(aspnet_UsersInRole entity)
		{
			this.SendPropertyChanging();
			entity.aspnet_User = this;
		}
		
		private void detach_aspnet_UsersInRoles(aspnet_UsersInRole entity)
		{
			this.SendPropertyChanging();
			entity.aspnet_User = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.aspnet_Roles")]
	public partial class aspnet_Role : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private System.Guid _ApplicationId;
		
		private System.Guid _RoleId;
		
		private string _RoleName;
		
		private string _LoweredRoleName;
		
		private string _Description;
		
		private EntitySet<aspnet_UsersInRole> _aspnet_UsersInRoles;
		
		private EntityRef<aspnet_Application> _aspnet_Application;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnApplicationIdChanging(System.Guid value);
    partial void OnApplicationIdChanged();
    partial void OnRoleIdChanging(System.Guid value);
    partial void OnRoleIdChanged();
    partial void OnRoleNameChanging(string value);
    partial void OnRoleNameChanged();
    partial void OnLoweredRoleNameChanging(string value);
    partial void OnLoweredRoleNameChanged();
    partial void OnDescriptionChanging(string value);
    partial void OnDescriptionChanged();
    #endregion
		
		public aspnet_Role()
		{
			this._aspnet_UsersInRoles = new EntitySet<aspnet_UsersInRole>(new Action<aspnet_UsersInRole>(this.attach_aspnet_UsersInRoles), new Action<aspnet_UsersInRole>(this.detach_aspnet_UsersInRoles));
			this._aspnet_Application = default(EntityRef<aspnet_Application>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ApplicationId", DbType="UniqueIdentifier NOT NULL")]
		public System.Guid ApplicationId
		{
			get
			{
				return this._ApplicationId;
			}
			set
			{
				if ((this._ApplicationId != value))
				{
					if (this._aspnet_Application.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnApplicationIdChanging(value);
					this.SendPropertyChanging();
					this._ApplicationId = value;
					this.SendPropertyChanged("ApplicationId");
					this.OnApplicationIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_RoleId", DbType="UniqueIdentifier NOT NULL", IsPrimaryKey=true)]
		public System.Guid RoleId
		{
			get
			{
				return this._RoleId;
			}
			set
			{
				if ((this._RoleId != value))
				{
					this.OnRoleIdChanging(value);
					this.SendPropertyChanging();
					this._RoleId = value;
					this.SendPropertyChanged("RoleId");
					this.OnRoleIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_RoleName", DbType="NVarChar(256) NOT NULL", CanBeNull=false)]
		public string RoleName
		{
			get
			{
				return this._RoleName;
			}
			set
			{
				if ((this._RoleName != value))
				{
					this.OnRoleNameChanging(value);
					this.SendPropertyChanging();
					this._RoleName = value;
					this.SendPropertyChanged("RoleName");
					this.OnRoleNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_LoweredRoleName", DbType="NVarChar(256) NOT NULL", CanBeNull=false)]
		public string LoweredRoleName
		{
			get
			{
				return this._LoweredRoleName;
			}
			set
			{
				if ((this._LoweredRoleName != value))
				{
					this.OnLoweredRoleNameChanging(value);
					this.SendPropertyChanging();
					this._LoweredRoleName = value;
					this.SendPropertyChanged("LoweredRoleName");
					this.OnLoweredRoleNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Description", DbType="NVarChar(256)")]
		public string Description
		{
			get
			{
				return this._Description;
			}
			set
			{
				if ((this._Description != value))
				{
					this.OnDescriptionChanging(value);
					this.SendPropertyChanging();
					this._Description = value;
					this.SendPropertyChanged("Description");
					this.OnDescriptionChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="aspnet_Role_aspnet_UsersInRole", Storage="_aspnet_UsersInRoles", ThisKey="RoleId", OtherKey="RoleId")]
		public EntitySet<aspnet_UsersInRole> aspnet_UsersInRoles
		{
			get
			{
				return this._aspnet_UsersInRoles;
			}
			set
			{
				this._aspnet_UsersInRoles.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="aspnet_Application_aspnet_Role", Storage="_aspnet_Application", ThisKey="ApplicationId", OtherKey="ApplicationId", IsForeignKey=true)]
		public aspnet_Application aspnet_Application
		{
			get
			{
				return this._aspnet_Application.Entity;
			}
			set
			{
				aspnet_Application previousValue = this._aspnet_Application.Entity;
				if (((previousValue != value) 
							|| (this._aspnet_Application.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._aspnet_Application.Entity = null;
						previousValue.aspnet_Roles.Remove(this);
					}
					this._aspnet_Application.Entity = value;
					if ((value != null))
					{
						value.aspnet_Roles.Add(this);
						this._ApplicationId = value.ApplicationId;
					}
					else
					{
						this._ApplicationId = default(System.Guid);
					}
					this.SendPropertyChanged("aspnet_Application");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_aspnet_UsersInRoles(aspnet_UsersInRole entity)
		{
			this.SendPropertyChanging();
			entity.aspnet_Role = this;
		}
		
		private void detach_aspnet_UsersInRoles(aspnet_UsersInRole entity)
		{
			this.SendPropertyChanging();
			entity.aspnet_Role = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.aspnet_Profile")]
	public partial class aspnet_Profile : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private System.Guid _UserId;
		
		private string _PropertyNames;
		
		private string _PropertyValuesString;
		
		private System.Data.Linq.Binary _PropertyValuesBinary;
		
		private System.DateTime _LastUpdatedDate;
		
		private EntityRef<aspnet_User> _aspnet_User;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnUserIdChanging(System.Guid value);
    partial void OnUserIdChanged();
    partial void OnPropertyNamesChanging(string value);
    partial void OnPropertyNamesChanged();
    partial void OnPropertyValuesStringChanging(string value);
    partial void OnPropertyValuesStringChanged();
    partial void OnPropertyValuesBinaryChanging(System.Data.Linq.Binary value);
    partial void OnPropertyValuesBinaryChanged();
    partial void OnLastUpdatedDateChanging(System.DateTime value);
    partial void OnLastUpdatedDateChanged();
    #endregion
		
		public aspnet_Profile()
		{
			this._aspnet_User = default(EntityRef<aspnet_User>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_UserId", DbType="UniqueIdentifier NOT NULL", IsPrimaryKey=true)]
		public System.Guid UserId
		{
			get
			{
				return this._UserId;
			}
			set
			{
				if ((this._UserId != value))
				{
					if (this._aspnet_User.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnUserIdChanging(value);
					this.SendPropertyChanging();
					this._UserId = value;
					this.SendPropertyChanged("UserId");
					this.OnUserIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PropertyNames", DbType="NText NOT NULL", CanBeNull=false, UpdateCheck=UpdateCheck.Never)]
		public string PropertyNames
		{
			get
			{
				return this._PropertyNames;
			}
			set
			{
				if ((this._PropertyNames != value))
				{
					this.OnPropertyNamesChanging(value);
					this.SendPropertyChanging();
					this._PropertyNames = value;
					this.SendPropertyChanged("PropertyNames");
					this.OnPropertyNamesChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PropertyValuesString", DbType="NText NOT NULL", CanBeNull=false, UpdateCheck=UpdateCheck.Never)]
		public string PropertyValuesString
		{
			get
			{
				return this._PropertyValuesString;
			}
			set
			{
				if ((this._PropertyValuesString != value))
				{
					this.OnPropertyValuesStringChanging(value);
					this.SendPropertyChanging();
					this._PropertyValuesString = value;
					this.SendPropertyChanged("PropertyValuesString");
					this.OnPropertyValuesStringChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PropertyValuesBinary", DbType="Image NOT NULL", CanBeNull=false, UpdateCheck=UpdateCheck.Never)]
		public System.Data.Linq.Binary PropertyValuesBinary
		{
			get
			{
				return this._PropertyValuesBinary;
			}
			set
			{
				if ((this._PropertyValuesBinary != value))
				{
					this.OnPropertyValuesBinaryChanging(value);
					this.SendPropertyChanging();
					this._PropertyValuesBinary = value;
					this.SendPropertyChanged("PropertyValuesBinary");
					this.OnPropertyValuesBinaryChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_LastUpdatedDate", DbType="DateTime NOT NULL")]
		public System.DateTime LastUpdatedDate
		{
			get
			{
				return this._LastUpdatedDate;
			}
			set
			{
				if ((this._LastUpdatedDate != value))
				{
					this.OnLastUpdatedDateChanging(value);
					this.SendPropertyChanging();
					this._LastUpdatedDate = value;
					this.SendPropertyChanged("LastUpdatedDate");
					this.OnLastUpdatedDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="aspnet_User_aspnet_Profile", Storage="_aspnet_User", ThisKey="UserId", OtherKey="UserId", IsForeignKey=true)]
		public aspnet_User aspnet_User
		{
			get
			{
				return this._aspnet_User.Entity;
			}
			set
			{
				aspnet_User previousValue = this._aspnet_User.Entity;
				if (((previousValue != value) 
							|| (this._aspnet_User.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._aspnet_User.Entity = null;
						previousValue.aspnet_Profile = null;
					}
					this._aspnet_User.Entity = value;
					if ((value != null))
					{
						value.aspnet_Profile = this;
						this._UserId = value.UserId;
					}
					else
					{
						this._UserId = default(System.Guid);
					}
					this.SendPropertyChanged("aspnet_User");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.aspnet_Membership")]
	public partial class aspnet_Membership : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private System.Guid _ApplicationId;
		
		private System.Guid _UserId;
		
		private string _Password;
		
		private int _PasswordFormat;
		
		private string _PasswordSalt;
		
		private string _MobilePIN;
		
		private string _Email;
		
		private string _LoweredEmail;
		
		private string _PasswordQuestion;
		
		private string _PasswordAnswer;
		
		private bool _IsApproved;
		
		private bool _IsLockedOut;
		
		private System.DateTime _CreateDate;
		
		private System.DateTime _LastLoginDate;
		
		private System.DateTime _LastPasswordChangedDate;
		
		private System.DateTime _LastLockoutDate;
		
		private int _FailedPasswordAttemptCount;
		
		private System.DateTime _FailedPasswordAttemptWindowStart;
		
		private int _FailedPasswordAnswerAttemptCount;
		
		private System.DateTime _FailedPasswordAnswerAttemptWindowStart;
		
		private string _Comment;
		
		private EntityRef<aspnet_User> _aspnet_User;
		
		private EntityRef<aspnet_Application> _aspnet_Application;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnApplicationIdChanging(System.Guid value);
    partial void OnApplicationIdChanged();
    partial void OnUserIdChanging(System.Guid value);
    partial void OnUserIdChanged();
    partial void OnPasswordChanging(string value);
    partial void OnPasswordChanged();
    partial void OnPasswordFormatChanging(int value);
    partial void OnPasswordFormatChanged();
    partial void OnPasswordSaltChanging(string value);
    partial void OnPasswordSaltChanged();
    partial void OnMobilePINChanging(string value);
    partial void OnMobilePINChanged();
    partial void OnEmailChanging(string value);
    partial void OnEmailChanged();
    partial void OnLoweredEmailChanging(string value);
    partial void OnLoweredEmailChanged();
    partial void OnPasswordQuestionChanging(string value);
    partial void OnPasswordQuestionChanged();
    partial void OnPasswordAnswerChanging(string value);
    partial void OnPasswordAnswerChanged();
    partial void OnIsApprovedChanging(bool value);
    partial void OnIsApprovedChanged();
    partial void OnIsLockedOutChanging(bool value);
    partial void OnIsLockedOutChanged();
    partial void OnCreateDateChanging(System.DateTime value);
    partial void OnCreateDateChanged();
    partial void OnLastLoginDateChanging(System.DateTime value);
    partial void OnLastLoginDateChanged();
    partial void OnLastPasswordChangedDateChanging(System.DateTime value);
    partial void OnLastPasswordChangedDateChanged();
    partial void OnLastLockoutDateChanging(System.DateTime value);
    partial void OnLastLockoutDateChanged();
    partial void OnFailedPasswordAttemptCountChanging(int value);
    partial void OnFailedPasswordAttemptCountChanged();
    partial void OnFailedPasswordAttemptWindowStartChanging(System.DateTime value);
    partial void OnFailedPasswordAttemptWindowStartChanged();
    partial void OnFailedPasswordAnswerAttemptCountChanging(int value);
    partial void OnFailedPasswordAnswerAttemptCountChanged();
    partial void OnFailedPasswordAnswerAttemptWindowStartChanging(System.DateTime value);
    partial void OnFailedPasswordAnswerAttemptWindowStartChanged();
    partial void OnCommentChanging(string value);
    partial void OnCommentChanged();
    #endregion
		
		public aspnet_Membership()
		{
			this._aspnet_User = default(EntityRef<aspnet_User>);
			this._aspnet_Application = default(EntityRef<aspnet_Application>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ApplicationId", DbType="UniqueIdentifier NOT NULL")]
		public System.Guid ApplicationId
		{
			get
			{
				return this._ApplicationId;
			}
			set
			{
				if ((this._ApplicationId != value))
				{
					if (this._aspnet_Application.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnApplicationIdChanging(value);
					this.SendPropertyChanging();
					this._ApplicationId = value;
					this.SendPropertyChanged("ApplicationId");
					this.OnApplicationIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_UserId", DbType="UniqueIdentifier NOT NULL", IsPrimaryKey=true)]
		public System.Guid UserId
		{
			get
			{
				return this._UserId;
			}
			set
			{
				if ((this._UserId != value))
				{
					if (this._aspnet_User.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnUserIdChanging(value);
					this.SendPropertyChanging();
					this._UserId = value;
					this.SendPropertyChanged("UserId");
					this.OnUserIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Password", DbType="NVarChar(128) NOT NULL", CanBeNull=false)]
		public string Password
		{
			get
			{
				return this._Password;
			}
			set
			{
				if ((this._Password != value))
				{
					this.OnPasswordChanging(value);
					this.SendPropertyChanging();
					this._Password = value;
					this.SendPropertyChanged("Password");
					this.OnPasswordChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PasswordFormat", DbType="Int NOT NULL")]
		public int PasswordFormat
		{
			get
			{
				return this._PasswordFormat;
			}
			set
			{
				if ((this._PasswordFormat != value))
				{
					this.OnPasswordFormatChanging(value);
					this.SendPropertyChanging();
					this._PasswordFormat = value;
					this.SendPropertyChanged("PasswordFormat");
					this.OnPasswordFormatChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PasswordSalt", DbType="NVarChar(128) NOT NULL", CanBeNull=false)]
		public string PasswordSalt
		{
			get
			{
				return this._PasswordSalt;
			}
			set
			{
				if ((this._PasswordSalt != value))
				{
					this.OnPasswordSaltChanging(value);
					this.SendPropertyChanging();
					this._PasswordSalt = value;
					this.SendPropertyChanged("PasswordSalt");
					this.OnPasswordSaltChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MobilePIN", DbType="NVarChar(16)")]
		public string MobilePIN
		{
			get
			{
				return this._MobilePIN;
			}
			set
			{
				if ((this._MobilePIN != value))
				{
					this.OnMobilePINChanging(value);
					this.SendPropertyChanging();
					this._MobilePIN = value;
					this.SendPropertyChanged("MobilePIN");
					this.OnMobilePINChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Email", DbType="NVarChar(256)")]
		public string Email
		{
			get
			{
				return this._Email;
			}
			set
			{
				if ((this._Email != value))
				{
					this.OnEmailChanging(value);
					this.SendPropertyChanging();
					this._Email = value;
					this.SendPropertyChanged("Email");
					this.OnEmailChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_LoweredEmail", DbType="NVarChar(256)")]
		public string LoweredEmail
		{
			get
			{
				return this._LoweredEmail;
			}
			set
			{
				if ((this._LoweredEmail != value))
				{
					this.OnLoweredEmailChanging(value);
					this.SendPropertyChanging();
					this._LoweredEmail = value;
					this.SendPropertyChanged("LoweredEmail");
					this.OnLoweredEmailChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PasswordQuestion", DbType="NVarChar(256)")]
		public string PasswordQuestion
		{
			get
			{
				return this._PasswordQuestion;
			}
			set
			{
				if ((this._PasswordQuestion != value))
				{
					this.OnPasswordQuestionChanging(value);
					this.SendPropertyChanging();
					this._PasswordQuestion = value;
					this.SendPropertyChanged("PasswordQuestion");
					this.OnPasswordQuestionChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PasswordAnswer", DbType="NVarChar(128)")]
		public string PasswordAnswer
		{
			get
			{
				return this._PasswordAnswer;
			}
			set
			{
				if ((this._PasswordAnswer != value))
				{
					this.OnPasswordAnswerChanging(value);
					this.SendPropertyChanging();
					this._PasswordAnswer = value;
					this.SendPropertyChanged("PasswordAnswer");
					this.OnPasswordAnswerChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IsApproved", DbType="Bit NOT NULL")]
		public bool IsApproved
		{
			get
			{
				return this._IsApproved;
			}
			set
			{
				if ((this._IsApproved != value))
				{
					this.OnIsApprovedChanging(value);
					this.SendPropertyChanging();
					this._IsApproved = value;
					this.SendPropertyChanged("IsApproved");
					this.OnIsApprovedChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IsLockedOut", DbType="Bit NOT NULL")]
		public bool IsLockedOut
		{
			get
			{
				return this._IsLockedOut;
			}
			set
			{
				if ((this._IsLockedOut != value))
				{
					this.OnIsLockedOutChanging(value);
					this.SendPropertyChanging();
					this._IsLockedOut = value;
					this.SendPropertyChanged("IsLockedOut");
					this.OnIsLockedOutChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CreateDate", DbType="DateTime NOT NULL")]
		public System.DateTime CreateDate
		{
			get
			{
				return this._CreateDate;
			}
			set
			{
				if ((this._CreateDate != value))
				{
					this.OnCreateDateChanging(value);
					this.SendPropertyChanging();
					this._CreateDate = value;
					this.SendPropertyChanged("CreateDate");
					this.OnCreateDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_LastLoginDate", DbType="DateTime NOT NULL")]
		public System.DateTime LastLoginDate
		{
			get
			{
				return this._LastLoginDate;
			}
			set
			{
				if ((this._LastLoginDate != value))
				{
					this.OnLastLoginDateChanging(value);
					this.SendPropertyChanging();
					this._LastLoginDate = value;
					this.SendPropertyChanged("LastLoginDate");
					this.OnLastLoginDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_LastPasswordChangedDate", DbType="DateTime NOT NULL")]
		public System.DateTime LastPasswordChangedDate
		{
			get
			{
				return this._LastPasswordChangedDate;
			}
			set
			{
				if ((this._LastPasswordChangedDate != value))
				{
					this.OnLastPasswordChangedDateChanging(value);
					this.SendPropertyChanging();
					this._LastPasswordChangedDate = value;
					this.SendPropertyChanged("LastPasswordChangedDate");
					this.OnLastPasswordChangedDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_LastLockoutDate", DbType="DateTime NOT NULL")]
		public System.DateTime LastLockoutDate
		{
			get
			{
				return this._LastLockoutDate;
			}
			set
			{
				if ((this._LastLockoutDate != value))
				{
					this.OnLastLockoutDateChanging(value);
					this.SendPropertyChanging();
					this._LastLockoutDate = value;
					this.SendPropertyChanged("LastLockoutDate");
					this.OnLastLockoutDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_FailedPasswordAttemptCount", DbType="Int NOT NULL")]
		public int FailedPasswordAttemptCount
		{
			get
			{
				return this._FailedPasswordAttemptCount;
			}
			set
			{
				if ((this._FailedPasswordAttemptCount != value))
				{
					this.OnFailedPasswordAttemptCountChanging(value);
					this.SendPropertyChanging();
					this._FailedPasswordAttemptCount = value;
					this.SendPropertyChanged("FailedPasswordAttemptCount");
					this.OnFailedPasswordAttemptCountChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_FailedPasswordAttemptWindowStart", DbType="DateTime NOT NULL")]
		public System.DateTime FailedPasswordAttemptWindowStart
		{
			get
			{
				return this._FailedPasswordAttemptWindowStart;
			}
			set
			{
				if ((this._FailedPasswordAttemptWindowStart != value))
				{
					this.OnFailedPasswordAttemptWindowStartChanging(value);
					this.SendPropertyChanging();
					this._FailedPasswordAttemptWindowStart = value;
					this.SendPropertyChanged("FailedPasswordAttemptWindowStart");
					this.OnFailedPasswordAttemptWindowStartChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_FailedPasswordAnswerAttemptCount", DbType="Int NOT NULL")]
		public int FailedPasswordAnswerAttemptCount
		{
			get
			{
				return this._FailedPasswordAnswerAttemptCount;
			}
			set
			{
				if ((this._FailedPasswordAnswerAttemptCount != value))
				{
					this.OnFailedPasswordAnswerAttemptCountChanging(value);
					this.SendPropertyChanging();
					this._FailedPasswordAnswerAttemptCount = value;
					this.SendPropertyChanged("FailedPasswordAnswerAttemptCount");
					this.OnFailedPasswordAnswerAttemptCountChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_FailedPasswordAnswerAttemptWindowStart", DbType="DateTime NOT NULL")]
		public System.DateTime FailedPasswordAnswerAttemptWindowStart
		{
			get
			{
				return this._FailedPasswordAnswerAttemptWindowStart;
			}
			set
			{
				if ((this._FailedPasswordAnswerAttemptWindowStart != value))
				{
					this.OnFailedPasswordAnswerAttemptWindowStartChanging(value);
					this.SendPropertyChanging();
					this._FailedPasswordAnswerAttemptWindowStart = value;
					this.SendPropertyChanged("FailedPasswordAnswerAttemptWindowStart");
					this.OnFailedPasswordAnswerAttemptWindowStartChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Comment", DbType="NText", UpdateCheck=UpdateCheck.Never)]
		public string Comment
		{
			get
			{
				return this._Comment;
			}
			set
			{
				if ((this._Comment != value))
				{
					this.OnCommentChanging(value);
					this.SendPropertyChanging();
					this._Comment = value;
					this.SendPropertyChanged("Comment");
					this.OnCommentChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="aspnet_User_aspnet_Membership", Storage="_aspnet_User", ThisKey="UserId", OtherKey="UserId", IsForeignKey=true)]
		public aspnet_User aspnet_User
		{
			get
			{
				return this._aspnet_User.Entity;
			}
			set
			{
				aspnet_User previousValue = this._aspnet_User.Entity;
				if (((previousValue != value) 
							|| (this._aspnet_User.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._aspnet_User.Entity = null;
						previousValue.aspnet_Membership = null;
					}
					this._aspnet_User.Entity = value;
					if ((value != null))
					{
						value.aspnet_Membership = this;
						this._UserId = value.UserId;
					}
					else
					{
						this._UserId = default(System.Guid);
					}
					this.SendPropertyChanged("aspnet_User");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="aspnet_Application_aspnet_Membership", Storage="_aspnet_Application", ThisKey="ApplicationId", OtherKey="ApplicationId", IsForeignKey=true)]
		public aspnet_Application aspnet_Application
		{
			get
			{
				return this._aspnet_Application.Entity;
			}
			set
			{
				aspnet_Application previousValue = this._aspnet_Application.Entity;
				if (((previousValue != value) 
							|| (this._aspnet_Application.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._aspnet_Application.Entity = null;
						previousValue.aspnet_Memberships.Remove(this);
					}
					this._aspnet_Application.Entity = value;
					if ((value != null))
					{
						value.aspnet_Memberships.Add(this);
						this._ApplicationId = value.ApplicationId;
					}
					else
					{
						this._ApplicationId = default(System.Guid);
					}
					this.SendPropertyChanged("aspnet_Application");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.aspnet_Applications")]
	public partial class aspnet_Application : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private string _ApplicationName;
		
		private string _LoweredApplicationName;
		
		private System.Guid _ApplicationId;
		
		private string _Description;
		
		private EntitySet<aspnet_User> _aspnet_Users;
		
		private EntitySet<aspnet_Role> _aspnet_Roles;
		
		private EntitySet<aspnet_Membership> _aspnet_Memberships;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnApplicationNameChanging(string value);
    partial void OnApplicationNameChanged();
    partial void OnLoweredApplicationNameChanging(string value);
    partial void OnLoweredApplicationNameChanged();
    partial void OnApplicationIdChanging(System.Guid value);
    partial void OnApplicationIdChanged();
    partial void OnDescriptionChanging(string value);
    partial void OnDescriptionChanged();
    #endregion
		
		public aspnet_Application()
		{
			this._aspnet_Users = new EntitySet<aspnet_User>(new Action<aspnet_User>(this.attach_aspnet_Users), new Action<aspnet_User>(this.detach_aspnet_Users));
			this._aspnet_Roles = new EntitySet<aspnet_Role>(new Action<aspnet_Role>(this.attach_aspnet_Roles), new Action<aspnet_Role>(this.detach_aspnet_Roles));
			this._aspnet_Memberships = new EntitySet<aspnet_Membership>(new Action<aspnet_Membership>(this.attach_aspnet_Memberships), new Action<aspnet_Membership>(this.detach_aspnet_Memberships));
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ApplicationName", DbType="NVarChar(256) NOT NULL", CanBeNull=false)]
		public string ApplicationName
		{
			get
			{
				return this._ApplicationName;
			}
			set
			{
				if ((this._ApplicationName != value))
				{
					this.OnApplicationNameChanging(value);
					this.SendPropertyChanging();
					this._ApplicationName = value;
					this.SendPropertyChanged("ApplicationName");
					this.OnApplicationNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_LoweredApplicationName", DbType="NVarChar(256) NOT NULL", CanBeNull=false)]
		public string LoweredApplicationName
		{
			get
			{
				return this._LoweredApplicationName;
			}
			set
			{
				if ((this._LoweredApplicationName != value))
				{
					this.OnLoweredApplicationNameChanging(value);
					this.SendPropertyChanging();
					this._LoweredApplicationName = value;
					this.SendPropertyChanged("LoweredApplicationName");
					this.OnLoweredApplicationNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ApplicationId", DbType="UniqueIdentifier NOT NULL", IsPrimaryKey=true)]
		public System.Guid ApplicationId
		{
			get
			{
				return this._ApplicationId;
			}
			set
			{
				if ((this._ApplicationId != value))
				{
					this.OnApplicationIdChanging(value);
					this.SendPropertyChanging();
					this._ApplicationId = value;
					this.SendPropertyChanged("ApplicationId");
					this.OnApplicationIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Description", DbType="NVarChar(256)")]
		public string Description
		{
			get
			{
				return this._Description;
			}
			set
			{
				if ((this._Description != value))
				{
					this.OnDescriptionChanging(value);
					this.SendPropertyChanging();
					this._Description = value;
					this.SendPropertyChanged("Description");
					this.OnDescriptionChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="aspnet_Application_aspnet_User", Storage="_aspnet_Users", ThisKey="ApplicationId", OtherKey="ApplicationId")]
		public EntitySet<aspnet_User> aspnet_Users
		{
			get
			{
				return this._aspnet_Users;
			}
			set
			{
				this._aspnet_Users.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="aspnet_Application_aspnet_Role", Storage="_aspnet_Roles", ThisKey="ApplicationId", OtherKey="ApplicationId")]
		public EntitySet<aspnet_Role> aspnet_Roles
		{
			get
			{
				return this._aspnet_Roles;
			}
			set
			{
				this._aspnet_Roles.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="aspnet_Application_aspnet_Membership", Storage="_aspnet_Memberships", ThisKey="ApplicationId", OtherKey="ApplicationId")]
		public EntitySet<aspnet_Membership> aspnet_Memberships
		{
			get
			{
				return this._aspnet_Memberships;
			}
			set
			{
				this._aspnet_Memberships.Assign(value);
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_aspnet_Users(aspnet_User entity)
		{
			this.SendPropertyChanging();
			entity.aspnet_Application = this;
		}
		
		private void detach_aspnet_Users(aspnet_User entity)
		{
			this.SendPropertyChanging();
			entity.aspnet_Application = null;
		}
		
		private void attach_aspnet_Roles(aspnet_Role entity)
		{
			this.SendPropertyChanging();
			entity.aspnet_Application = this;
		}
		
		private void detach_aspnet_Roles(aspnet_Role entity)
		{
			this.SendPropertyChanging();
			entity.aspnet_Application = null;
		}
		
		private void attach_aspnet_Memberships(aspnet_Membership entity)
		{
			this.SendPropertyChanging();
			entity.aspnet_Application = this;
		}
		
		private void detach_aspnet_Memberships(aspnet_Membership entity)
		{
			this.SendPropertyChanging();
			entity.aspnet_Application = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.CurrencyUnits")]
	public partial class CurrencyUnit : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _Id;
		
		private string _CurrencyName;
		
		private string _CurrencySymbol;
		
		private EntitySet<Product> _Products;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIdChanging(int value);
    partial void OnIdChanged();
    partial void OnCurrencyNameChanging(string value);
    partial void OnCurrencyNameChanged();
    partial void OnCurrencySymbolChanging(string value);
    partial void OnCurrencySymbolChanged();
    #endregion
		
		public CurrencyUnit()
		{
			this._Products = new EntitySet<Product>(new Action<Product>(this.attach_Products), new Action<Product>(this.detach_Products));
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Id", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int Id
		{
			get
			{
				return this._Id;
			}
			set
			{
				if ((this._Id != value))
				{
					this.OnIdChanging(value);
					this.SendPropertyChanging();
					this._Id = value;
					this.SendPropertyChanged("Id");
					this.OnIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CurrencyName", DbType="NVarChar(255) NOT NULL", CanBeNull=false)]
		public string CurrencyName
		{
			get
			{
				return this._CurrencyName;
			}
			set
			{
				if ((this._CurrencyName != value))
				{
					this.OnCurrencyNameChanging(value);
					this.SendPropertyChanging();
					this._CurrencyName = value;
					this.SendPropertyChanged("CurrencyName");
					this.OnCurrencyNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CurrencySymbol", DbType="NVarChar(255) NOT NULL", CanBeNull=false)]
		public string CurrencySymbol
		{
			get
			{
				return this._CurrencySymbol;
			}
			set
			{
				if ((this._CurrencySymbol != value))
				{
					this.OnCurrencySymbolChanging(value);
					this.SendPropertyChanging();
					this._CurrencySymbol = value;
					this.SendPropertyChanged("CurrencySymbol");
					this.OnCurrencySymbolChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="CurrencyUnit_Product", Storage="_Products", ThisKey="Id", OtherKey="CurrencyUnitId")]
		public EntitySet<Product> Products
		{
			get
			{
				return this._Products;
			}
			set
			{
				this._Products.Assign(value);
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_Products(Product entity)
		{
			this.SendPropertyChanging();
			entity.CurrencyUnit = this;
		}
		
		private void detach_Products(Product entity)
		{
			this.SendPropertyChanging();
			entity.CurrencyUnit = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Contacts")]
	public partial class Contact : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _Id;
		
		private string _Name;
		
		private string _Gender;
		
		private string _Phone1;
		
		private string _Phone2;
		
		private string _Phone3;
		
		private string _Email;
		
		private bool _IsActived;
		
		private int _CompanyId;
		
		private EntityRef<Company> _Company;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIdChanging(int value);
    partial void OnIdChanged();
    partial void OnNameChanging(string value);
    partial void OnNameChanged();
    partial void OnGenderChanging(string value);
    partial void OnGenderChanged();
    partial void OnPhone1Changing(string value);
    partial void OnPhone1Changed();
    partial void OnPhone2Changing(string value);
    partial void OnPhone2Changed();
    partial void OnPhone3Changing(string value);
    partial void OnPhone3Changed();
    partial void OnEmailChanging(string value);
    partial void OnEmailChanged();
    partial void OnIsActivedChanging(bool value);
    partial void OnIsActivedChanged();
    partial void OnCompanyIdChanging(int value);
    partial void OnCompanyIdChanged();
    #endregion
		
		public Contact()
		{
			this._Company = default(EntityRef<Company>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Id", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int Id
		{
			get
			{
				return this._Id;
			}
			set
			{
				if ((this._Id != value))
				{
					this.OnIdChanging(value);
					this.SendPropertyChanging();
					this._Id = value;
					this.SendPropertyChanged("Id");
					this.OnIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Name", DbType="NVarChar(255) NOT NULL", CanBeNull=false)]
		public string Name
		{
			get
			{
				return this._Name;
			}
			set
			{
				if ((this._Name != value))
				{
					this.OnNameChanging(value);
					this.SendPropertyChanging();
					this._Name = value;
					this.SendPropertyChanged("Name");
					this.OnNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Gender", DbType="NVarChar(255) NOT NULL", CanBeNull=false)]
		public string Gender
		{
			get
			{
				return this._Gender;
			}
			set
			{
				if ((this._Gender != value))
				{
					this.OnGenderChanging(value);
					this.SendPropertyChanging();
					this._Gender = value;
					this.SendPropertyChanged("Gender");
					this.OnGenderChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Phone1", DbType="NVarChar(255) NOT NULL", CanBeNull=false)]
		public string Phone1
		{
			get
			{
				return this._Phone1;
			}
			set
			{
				if ((this._Phone1 != value))
				{
					this.OnPhone1Changing(value);
					this.SendPropertyChanging();
					this._Phone1 = value;
					this.SendPropertyChanged("Phone1");
					this.OnPhone1Changed();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Phone2", DbType="NVarChar(255)")]
		public string Phone2
		{
			get
			{
				return this._Phone2;
			}
			set
			{
				if ((this._Phone2 != value))
				{
					this.OnPhone2Changing(value);
					this.SendPropertyChanging();
					this._Phone2 = value;
					this.SendPropertyChanged("Phone2");
					this.OnPhone2Changed();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Phone3", DbType="NVarChar(255)")]
		public string Phone3
		{
			get
			{
				return this._Phone3;
			}
			set
			{
				if ((this._Phone3 != value))
				{
					this.OnPhone3Changing(value);
					this.SendPropertyChanging();
					this._Phone3 = value;
					this.SendPropertyChanged("Phone3");
					this.OnPhone3Changed();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Email", DbType="NVarChar(255)")]
		public string Email
		{
			get
			{
				return this._Email;
			}
			set
			{
				if ((this._Email != value))
				{
					this.OnEmailChanging(value);
					this.SendPropertyChanging();
					this._Email = value;
					this.SendPropertyChanged("Email");
					this.OnEmailChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IsActived", DbType="Bit NOT NULL")]
		public bool IsActived
		{
			get
			{
				return this._IsActived;
			}
			set
			{
				if ((this._IsActived != value))
				{
					this.OnIsActivedChanging(value);
					this.SendPropertyChanging();
					this._IsActived = value;
					this.SendPropertyChanged("IsActived");
					this.OnIsActivedChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CompanyId", DbType="Int NOT NULL")]
		public int CompanyId
		{
			get
			{
				return this._CompanyId;
			}
			set
			{
				if ((this._CompanyId != value))
				{
					if (this._Company.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnCompanyIdChanging(value);
					this.SendPropertyChanging();
					this._CompanyId = value;
					this.SendPropertyChanged("CompanyId");
					this.OnCompanyIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Company_Contact", Storage="_Company", ThisKey="CompanyId", OtherKey="Id", IsForeignKey=true)]
		public Company Company
		{
			get
			{
				return this._Company.Entity;
			}
			set
			{
				Company previousValue = this._Company.Entity;
				if (((previousValue != value) 
							|| (this._Company.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Company.Entity = null;
						previousValue.Contacts.Remove(this);
					}
					this._Company.Entity = value;
					if ((value != null))
					{
						value.Contacts.Add(this);
						this._CompanyId = value.Id;
					}
					else
					{
						this._CompanyId = default(int);
					}
					this.SendPropertyChanged("Company");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.ProductTypes")]
	public partial class ProductType : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _Id;
		
		private string _Name;
		
		private short _SortIndex;
		
		private int _ParentId;
		
		private EntitySet<ProductType> _ProductTypes;
		
		private EntitySet<Product> _Products;
		
		private EntityRef<ProductType> _ProductType1;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIdChanging(int value);
    partial void OnIdChanged();
    partial void OnNameChanging(string value);
    partial void OnNameChanged();
    partial void OnSortIndexChanging(short value);
    partial void OnSortIndexChanged();
    partial void OnParentIdChanging(int value);
    partial void OnParentIdChanged();
    #endregion
		
		public ProductType()
		{
			this._ProductTypes = new EntitySet<ProductType>(new Action<ProductType>(this.attach_ProductTypes), new Action<ProductType>(this.detach_ProductTypes));
			this._Products = new EntitySet<Product>(new Action<Product>(this.attach_Products), new Action<Product>(this.detach_Products));
			this._ProductType1 = default(EntityRef<ProductType>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Id", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int Id
		{
			get
			{
				return this._Id;
			}
			set
			{
				if ((this._Id != value))
				{
					this.OnIdChanging(value);
					this.SendPropertyChanging();
					this._Id = value;
					this.SendPropertyChanged("Id");
					this.OnIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Name", DbType="NVarChar(255)")]
		public string Name
		{
			get
			{
				return this._Name;
			}
			set
			{
				if ((this._Name != value))
				{
					this.OnNameChanging(value);
					this.SendPropertyChanging();
					this._Name = value;
					this.SendPropertyChanged("Name");
					this.OnNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SortIndex", DbType="SmallInt NOT NULL")]
		public short SortIndex
		{
			get
			{
				return this._SortIndex;
			}
			set
			{
				if ((this._SortIndex != value))
				{
					this.OnSortIndexChanging(value);
					this.SendPropertyChanging();
					this._SortIndex = value;
					this.SendPropertyChanged("SortIndex");
					this.OnSortIndexChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ParentId", DbType="Int NOT NULL")]
		public int ParentId
		{
			get
			{
				return this._ParentId;
			}
			set
			{
				if ((this._ParentId != value))
				{
					if (this._ProductType1.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnParentIdChanging(value);
					this.SendPropertyChanging();
					this._ParentId = value;
					this.SendPropertyChanged("ParentId");
					this.OnParentIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="ProductType_ProductType", Storage="_ProductTypes", ThisKey="Id", OtherKey="ParentId")]
		public EntitySet<ProductType> ProductTypes
		{
			get
			{
				return this._ProductTypes;
			}
			set
			{
				this._ProductTypes.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="ProductType_Product", Storage="_Products", ThisKey="Id", OtherKey="ProductTypeId")]
		public EntitySet<Product> Products
		{
			get
			{
				return this._Products;
			}
			set
			{
				this._Products.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="ProductType_ProductType", Storage="_ProductType1", ThisKey="ParentId", OtherKey="Id", IsForeignKey=true)]
		public ProductType ProductType1
		{
			get
			{
				return this._ProductType1.Entity;
			}
			set
			{
				ProductType previousValue = this._ProductType1.Entity;
				if (((previousValue != value) 
							|| (this._ProductType1.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._ProductType1.Entity = null;
						previousValue.ProductTypes.Remove(this);
					}
					this._ProductType1.Entity = value;
					if ((value != null))
					{
						value.ProductTypes.Add(this);
						this._ParentId = value.Id;
					}
					else
					{
						this._ParentId = default(int);
					}
					this.SendPropertyChanged("ProductType1");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_ProductTypes(ProductType entity)
		{
			this.SendPropertyChanging();
			entity.ProductType1 = this;
		}
		
		private void detach_ProductTypes(ProductType entity)
		{
			this.SendPropertyChanging();
			entity.ProductType1 = null;
		}
		
		private void attach_Products(Product entity)
		{
			this.SendPropertyChanging();
			entity.ProductType = this;
		}
		
		private void detach_Products(Product entity)
		{
			this.SendPropertyChanging();
			entity.ProductType = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Companies")]
	public partial class Company : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _Id;
		
		private string _CompanyName;
		
		private string _CompanyAddress;
		
		private int _CompanyType;
		
		private EntitySet<Contact> _Contacts;
		
		private EntitySet<DeliverAddress> _DeliverAddresses;
		
		private EntitySet<DeliveryOrder> _DeliveryOrders;
		
		private EntitySet<ImportProfile> _ImportProfiles;
		
		private EntitySet<InputOrder> _InputOrders;
		
		private EntitySet<InputOrderDetail> _InputOrderDetails;
		
		private EntitySet<Product> _Products;
		
		private EntitySet<ProductStorage> _ProductStorages;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIdChanging(int value);
    partial void OnIdChanged();
    partial void OnCompanyNameChanging(string value);
    partial void OnCompanyNameChanged();
    partial void OnCompanyAddressChanging(string value);
    partial void OnCompanyAddressChanged();
    partial void OnCompanyTypeChanging(int value);
    partial void OnCompanyTypeChanged();
    #endregion
		
		public Company()
		{
			this._Contacts = new EntitySet<Contact>(new Action<Contact>(this.attach_Contacts), new Action<Contact>(this.detach_Contacts));
			this._DeliverAddresses = new EntitySet<DeliverAddress>(new Action<DeliverAddress>(this.attach_DeliverAddresses), new Action<DeliverAddress>(this.detach_DeliverAddresses));
			this._DeliveryOrders = new EntitySet<DeliveryOrder>(new Action<DeliveryOrder>(this.attach_DeliveryOrders), new Action<DeliveryOrder>(this.detach_DeliveryOrders));
			this._ImportProfiles = new EntitySet<ImportProfile>(new Action<ImportProfile>(this.attach_ImportProfiles), new Action<ImportProfile>(this.detach_ImportProfiles));
			this._InputOrders = new EntitySet<InputOrder>(new Action<InputOrder>(this.attach_InputOrders), new Action<InputOrder>(this.detach_InputOrders));
			this._InputOrderDetails = new EntitySet<InputOrderDetail>(new Action<InputOrderDetail>(this.attach_InputOrderDetails), new Action<InputOrderDetail>(this.detach_InputOrderDetails));
			this._Products = new EntitySet<Product>(new Action<Product>(this.attach_Products), new Action<Product>(this.detach_Products));
			this._ProductStorages = new EntitySet<ProductStorage>(new Action<ProductStorage>(this.attach_ProductStorages), new Action<ProductStorage>(this.detach_ProductStorages));
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Id", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int Id
		{
			get
			{
				return this._Id;
			}
			set
			{
				if ((this._Id != value))
				{
					this.OnIdChanging(value);
					this.SendPropertyChanging();
					this._Id = value;
					this.SendPropertyChanged("Id");
					this.OnIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CompanyName", DbType="NVarChar(255) NOT NULL", CanBeNull=false)]
		public string CompanyName
		{
			get
			{
				return this._CompanyName;
			}
			set
			{
				if ((this._CompanyName != value))
				{
					this.OnCompanyNameChanging(value);
					this.SendPropertyChanging();
					this._CompanyName = value;
					this.SendPropertyChanged("CompanyName");
					this.OnCompanyNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CompanyAddress", DbType="NVarChar(255) NOT NULL", CanBeNull=false)]
		public string CompanyAddress
		{
			get
			{
				return this._CompanyAddress;
			}
			set
			{
				if ((this._CompanyAddress != value))
				{
					this.OnCompanyAddressChanging(value);
					this.SendPropertyChanging();
					this._CompanyAddress = value;
					this.SendPropertyChanged("CompanyAddress");
					this.OnCompanyAddressChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CompanyType", DbType="Int NOT NULL")]
		public int CompanyType
		{
			get
			{
				return this._CompanyType;
			}
			set
			{
				if ((this._CompanyType != value))
				{
					this.OnCompanyTypeChanging(value);
					this.SendPropertyChanging();
					this._CompanyType = value;
					this.SendPropertyChanged("CompanyType");
					this.OnCompanyTypeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Company_Contact", Storage="_Contacts", ThisKey="Id", OtherKey="CompanyId")]
		public EntitySet<Contact> Contacts
		{
			get
			{
				return this._Contacts;
			}
			set
			{
				this._Contacts.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Company_DeliverAddress", Storage="_DeliverAddresses", ThisKey="Id", OtherKey="CompanyId")]
		public EntitySet<DeliverAddress> DeliverAddresses
		{
			get
			{
				return this._DeliverAddresses;
			}
			set
			{
				this._DeliverAddresses.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Company_DeliveryOrder", Storage="_DeliveryOrders", ThisKey="Id", OtherKey="CompanyId")]
		public EntitySet<DeliveryOrder> DeliveryOrders
		{
			get
			{
				return this._DeliveryOrders;
			}
			set
			{
				this._DeliveryOrders.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Company_ImportProfile", Storage="_ImportProfiles", ThisKey="Id", OtherKey="CompanyId")]
		public EntitySet<ImportProfile> ImportProfiles
		{
			get
			{
				return this._ImportProfiles;
			}
			set
			{
				this._ImportProfiles.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Company_InputOrder", Storage="_InputOrders", ThisKey="Id", OtherKey="CompanyId")]
		public EntitySet<InputOrder> InputOrders
		{
			get
			{
				return this._InputOrders;
			}
			set
			{
				this._InputOrders.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Company_InputOrderDetail", Storage="_InputOrderDetails", ThisKey="Id", OtherKey="CompanyId")]
		public EntitySet<InputOrderDetail> InputOrderDetails
		{
			get
			{
				return this._InputOrderDetails;
			}
			set
			{
				this._InputOrderDetails.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Company_Product", Storage="_Products", ThisKey="Id", OtherKey="CompanyId")]
		public EntitySet<Product> Products
		{
			get
			{
				return this._Products;
			}
			set
			{
				this._Products.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Company_ProductStorage", Storage="_ProductStorages", ThisKey="Id", OtherKey="CompanyId")]
		public EntitySet<ProductStorage> ProductStorages
		{
			get
			{
				return this._ProductStorages;
			}
			set
			{
				this._ProductStorages.Assign(value);
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_Contacts(Contact entity)
		{
			this.SendPropertyChanging();
			entity.Company = this;
		}
		
		private void detach_Contacts(Contact entity)
		{
			this.SendPropertyChanging();
			entity.Company = null;
		}
		
		private void attach_DeliverAddresses(DeliverAddress entity)
		{
			this.SendPropertyChanging();
			entity.Company = this;
		}
		
		private void detach_DeliverAddresses(DeliverAddress entity)
		{
			this.SendPropertyChanging();
			entity.Company = null;
		}
		
		private void attach_DeliveryOrders(DeliveryOrder entity)
		{
			this.SendPropertyChanging();
			entity.Company = this;
		}
		
		private void detach_DeliveryOrders(DeliveryOrder entity)
		{
			this.SendPropertyChanging();
			entity.Company = null;
		}
		
		private void attach_ImportProfiles(ImportProfile entity)
		{
			this.SendPropertyChanging();
			entity.Company = this;
		}
		
		private void detach_ImportProfiles(ImportProfile entity)
		{
			this.SendPropertyChanging();
			entity.Company = null;
		}
		
		private void attach_InputOrders(InputOrder entity)
		{
			this.SendPropertyChanging();
			entity.Company = this;
		}
		
		private void detach_InputOrders(InputOrder entity)
		{
			this.SendPropertyChanging();
			entity.Company = null;
		}
		
		private void attach_InputOrderDetails(InputOrderDetail entity)
		{
			this.SendPropertyChanging();
			entity.Company = this;
		}
		
		private void detach_InputOrderDetails(InputOrderDetail entity)
		{
			this.SendPropertyChanging();
			entity.Company = null;
		}
		
		private void attach_Products(Product entity)
		{
			this.SendPropertyChanging();
			entity.Company = this;
		}
		
		private void detach_Products(Product entity)
		{
			this.SendPropertyChanging();
			entity.Company = null;
		}
		
		private void attach_ProductStorages(ProductStorage entity)
		{
			this.SendPropertyChanging();
			entity.Company = this;
		}
		
		private void detach_ProductStorages(ProductStorage entity)
		{
			this.SendPropertyChanging();
			entity.Company = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.DeliverAddresses")]
	public partial class DeliverAddress : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _Id;
		
		private string _AddressCode;
		
		private string _AddressName;
		
		private string _Address;
		
		private int _CompanyId;
		
		private int _DeliverDays;
		
		private EntitySet<DeliveryOrder> _DeliveryOrders;
		
		private EntityRef<Company> _Company;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIdChanging(int value);
    partial void OnIdChanged();
    partial void OnAddressCodeChanging(string value);
    partial void OnAddressCodeChanged();
    partial void OnAddressNameChanging(string value);
    partial void OnAddressNameChanged();
    partial void OnAddressChanging(string value);
    partial void OnAddressChanged();
    partial void OnCompanyIdChanging(int value);
    partial void OnCompanyIdChanged();
    partial void OnDeliverDaysChanging(int value);
    partial void OnDeliverDaysChanged();
    #endregion
		
		public DeliverAddress()
		{
			this._DeliveryOrders = new EntitySet<DeliveryOrder>(new Action<DeliveryOrder>(this.attach_DeliveryOrders), new Action<DeliveryOrder>(this.detach_DeliveryOrders));
			this._Company = default(EntityRef<Company>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Id", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int Id
		{
			get
			{
				return this._Id;
			}
			set
			{
				if ((this._Id != value))
				{
					this.OnIdChanging(value);
					this.SendPropertyChanging();
					this._Id = value;
					this.SendPropertyChanged("Id");
					this.OnIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_AddressCode", DbType="NVarChar(50) NOT NULL", CanBeNull=false)]
		public string AddressCode
		{
			get
			{
				return this._AddressCode;
			}
			set
			{
				if ((this._AddressCode != value))
				{
					this.OnAddressCodeChanging(value);
					this.SendPropertyChanging();
					this._AddressCode = value;
					this.SendPropertyChanged("AddressCode");
					this.OnAddressCodeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_AddressName", DbType="NVarChar(100)")]
		public string AddressName
		{
			get
			{
				return this._AddressName;
			}
			set
			{
				if ((this._AddressName != value))
				{
					this.OnAddressNameChanging(value);
					this.SendPropertyChanging();
					this._AddressName = value;
					this.SendPropertyChanged("AddressName");
					this.OnAddressNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Address", DbType="NVarChar(300)")]
		public string Address
		{
			get
			{
				return this._Address;
			}
			set
			{
				if ((this._Address != value))
				{
					this.OnAddressChanging(value);
					this.SendPropertyChanging();
					this._Address = value;
					this.SendPropertyChanged("Address");
					this.OnAddressChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CompanyId", DbType="Int NOT NULL")]
		public int CompanyId
		{
			get
			{
				return this._CompanyId;
			}
			set
			{
				if ((this._CompanyId != value))
				{
					if (this._Company.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnCompanyIdChanging(value);
					this.SendPropertyChanging();
					this._CompanyId = value;
					this.SendPropertyChanged("CompanyId");
					this.OnCompanyIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DeliverDays", DbType="Int NOT NULL")]
		public int DeliverDays
		{
			get
			{
				return this._DeliverDays;
			}
			set
			{
				if ((this._DeliverDays != value))
				{
					this.OnDeliverDaysChanging(value);
					this.SendPropertyChanging();
					this._DeliverDays = value;
					this.SendPropertyChanged("DeliverDays");
					this.OnDeliverDaysChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="DeliverAddress_DeliveryOrder", Storage="_DeliveryOrders", ThisKey="Id", OtherKey="DeliveryAddressId")]
		public EntitySet<DeliveryOrder> DeliveryOrders
		{
			get
			{
				return this._DeliveryOrders;
			}
			set
			{
				this._DeliveryOrders.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Company_DeliverAddress", Storage="_Company", ThisKey="CompanyId", OtherKey="Id", IsForeignKey=true)]
		public Company Company
		{
			get
			{
				return this._Company.Entity;
			}
			set
			{
				Company previousValue = this._Company.Entity;
				if (((previousValue != value) 
							|| (this._Company.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Company.Entity = null;
						previousValue.DeliverAddresses.Remove(this);
					}
					this._Company.Entity = value;
					if ((value != null))
					{
						value.DeliverAddresses.Add(this);
						this._CompanyId = value.Id;
					}
					else
					{
						this._CompanyId = default(int);
					}
					this.SendPropertyChanged("Company");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_DeliveryOrders(DeliveryOrder entity)
		{
			this.SendPropertyChanging();
			entity.DeliverAddress = this;
		}
		
		private void detach_DeliveryOrders(DeliveryOrder entity)
		{
			this.SendPropertyChanging();
			entity.DeliverAddress = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.DeliveryOrders")]
	public partial class DeliveryOrder : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _Id;
		
		private int _CompanyId;
		
		private string _DeliveryOrderNumber;
		
		private System.DateTime _PreDeliveryDate;
		
		private int _DeliveryAddressId;
		
		private System.DateTime _ReachedDate;
		
		private string _Invoice;
		
		private string _Status;
		
		private EntitySet<AssignedDeliveryOrderDetail> _AssignedDeliveryOrderDetails;
		
		private EntitySet<DeliveryOrderDetail> _DeliveryOrderDetails;
		
		private EntityRef<Company> _Company;
		
		private EntityRef<DeliverAddress> _DeliverAddress;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIdChanging(int value);
    partial void OnIdChanged();
    partial void OnCompanyIdChanging(int value);
    partial void OnCompanyIdChanged();
    partial void OnDeliveryOrderNumberChanging(string value);
    partial void OnDeliveryOrderNumberChanged();
    partial void OnPreDeliveryDateChanging(System.DateTime value);
    partial void OnPreDeliveryDateChanged();
    partial void OnDeliveryAddressIdChanging(int value);
    partial void OnDeliveryAddressIdChanged();
    partial void OnReachedDateChanging(System.DateTime value);
    partial void OnReachedDateChanged();
    partial void OnInvoiceChanging(string value);
    partial void OnInvoiceChanged();
    partial void OnStatusChanging(string value);
    partial void OnStatusChanged();
    #endregion
		
		public DeliveryOrder()
		{
			this._AssignedDeliveryOrderDetails = new EntitySet<AssignedDeliveryOrderDetail>(new Action<AssignedDeliveryOrderDetail>(this.attach_AssignedDeliveryOrderDetails), new Action<AssignedDeliveryOrderDetail>(this.detach_AssignedDeliveryOrderDetails));
			this._DeliveryOrderDetails = new EntitySet<DeliveryOrderDetail>(new Action<DeliveryOrderDetail>(this.attach_DeliveryOrderDetails), new Action<DeliveryOrderDetail>(this.detach_DeliveryOrderDetails));
			this._Company = default(EntityRef<Company>);
			this._DeliverAddress = default(EntityRef<DeliverAddress>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Id", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int Id
		{
			get
			{
				return this._Id;
			}
			set
			{
				if ((this._Id != value))
				{
					this.OnIdChanging(value);
					this.SendPropertyChanging();
					this._Id = value;
					this.SendPropertyChanged("Id");
					this.OnIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CompanyId", DbType="Int NOT NULL")]
		public int CompanyId
		{
			get
			{
				return this._CompanyId;
			}
			set
			{
				if ((this._CompanyId != value))
				{
					if (this._Company.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnCompanyIdChanging(value);
					this.SendPropertyChanging();
					this._CompanyId = value;
					this.SendPropertyChanged("CompanyId");
					this.OnCompanyIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DeliveryOrderNumber", DbType="NVarChar(50) NOT NULL", CanBeNull=false)]
		public string DeliveryOrderNumber
		{
			get
			{
				return this._DeliveryOrderNumber;
			}
			set
			{
				if ((this._DeliveryOrderNumber != value))
				{
					this.OnDeliveryOrderNumberChanging(value);
					this.SendPropertyChanging();
					this._DeliveryOrderNumber = value;
					this.SendPropertyChanged("DeliveryOrderNumber");
					this.OnDeliveryOrderNumberChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PreDeliveryDate", DbType="DateTime NOT NULL")]
		public System.DateTime PreDeliveryDate
		{
			get
			{
				return this._PreDeliveryDate;
			}
			set
			{
				if ((this._PreDeliveryDate != value))
				{
					this.OnPreDeliveryDateChanging(value);
					this.SendPropertyChanging();
					this._PreDeliveryDate = value;
					this.SendPropertyChanged("PreDeliveryDate");
					this.OnPreDeliveryDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DeliveryAddressId", DbType="Int NOT NULL")]
		public int DeliveryAddressId
		{
			get
			{
				return this._DeliveryAddressId;
			}
			set
			{
				if ((this._DeliveryAddressId != value))
				{
					if (this._DeliverAddress.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnDeliveryAddressIdChanging(value);
					this.SendPropertyChanging();
					this._DeliveryAddressId = value;
					this.SendPropertyChanged("DeliveryAddressId");
					this.OnDeliveryAddressIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ReachedDate", DbType="DateTime NOT NULL")]
		public System.DateTime ReachedDate
		{
			get
			{
				return this._ReachedDate;
			}
			set
			{
				if ((this._ReachedDate != value))
				{
					this.OnReachedDateChanging(value);
					this.SendPropertyChanging();
					this._ReachedDate = value;
					this.SendPropertyChanged("ReachedDate");
					this.OnReachedDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Invoice", DbType="NVarChar(50)")]
		public string Invoice
		{
			get
			{
				return this._Invoice;
			}
			set
			{
				if ((this._Invoice != value))
				{
					this.OnInvoiceChanging(value);
					this.SendPropertyChanging();
					this._Invoice = value;
					this.SendPropertyChanged("Invoice");
					this.OnInvoiceChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Status", DbType="NVarChar(50) NOT NULL", CanBeNull=false)]
		public string Status
		{
			get
			{
				return this._Status;
			}
			set
			{
				if ((this._Status != value))
				{
					this.OnStatusChanging(value);
					this.SendPropertyChanging();
					this._Status = value;
					this.SendPropertyChanged("Status");
					this.OnStatusChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="DeliveryOrder_AssignedDeliveryOrderDetail", Storage="_AssignedDeliveryOrderDetails", ThisKey="Id", OtherKey="DeliveryOrderId")]
		public EntitySet<AssignedDeliveryOrderDetail> AssignedDeliveryOrderDetails
		{
			get
			{
				return this._AssignedDeliveryOrderDetails;
			}
			set
			{
				this._AssignedDeliveryOrderDetails.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="DeliveryOrder_DeliveryOrderDetail", Storage="_DeliveryOrderDetails", ThisKey="Id", OtherKey="DeliveryOrderId")]
		public EntitySet<DeliveryOrderDetail> DeliveryOrderDetails
		{
			get
			{
				return this._DeliveryOrderDetails;
			}
			set
			{
				this._DeliveryOrderDetails.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Company_DeliveryOrder", Storage="_Company", ThisKey="CompanyId", OtherKey="Id", IsForeignKey=true)]
		public Company Company
		{
			get
			{
				return this._Company.Entity;
			}
			set
			{
				Company previousValue = this._Company.Entity;
				if (((previousValue != value) 
							|| (this._Company.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Company.Entity = null;
						previousValue.DeliveryOrders.Remove(this);
					}
					this._Company.Entity = value;
					if ((value != null))
					{
						value.DeliveryOrders.Add(this);
						this._CompanyId = value.Id;
					}
					else
					{
						this._CompanyId = default(int);
					}
					this.SendPropertyChanged("Company");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="DeliverAddress_DeliveryOrder", Storage="_DeliverAddress", ThisKey="DeliveryAddressId", OtherKey="Id", IsForeignKey=true)]
		public DeliverAddress DeliverAddress
		{
			get
			{
				return this._DeliverAddress.Entity;
			}
			set
			{
				DeliverAddress previousValue = this._DeliverAddress.Entity;
				if (((previousValue != value) 
							|| (this._DeliverAddress.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._DeliverAddress.Entity = null;
						previousValue.DeliveryOrders.Remove(this);
					}
					this._DeliverAddress.Entity = value;
					if ((value != null))
					{
						value.DeliveryOrders.Add(this);
						this._DeliveryAddressId = value.Id;
					}
					else
					{
						this._DeliveryAddressId = default(int);
					}
					this.SendPropertyChanged("DeliverAddress");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_AssignedDeliveryOrderDetails(AssignedDeliveryOrderDetail entity)
		{
			this.SendPropertyChanging();
			entity.DeliveryOrder = this;
		}
		
		private void detach_AssignedDeliveryOrderDetails(AssignedDeliveryOrderDetail entity)
		{
			this.SendPropertyChanging();
			entity.DeliveryOrder = null;
		}
		
		private void attach_DeliveryOrderDetails(DeliveryOrderDetail entity)
		{
			this.SendPropertyChanging();
			entity.DeliveryOrder = this;
		}
		
		private void detach_DeliveryOrderDetails(DeliveryOrderDetail entity)
		{
			this.SendPropertyChanging();
			entity.DeliveryOrder = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.OrderNumbers")]
	public partial class OrderNumber : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private string _OrderNamrber;
		
		private System.DateTime _CreateDate;
		
		private int _OrderType;
		
		private int _Status;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnOrderNamrberChanging(string value);
    partial void OnOrderNamrberChanged();
    partial void OnCreateDateChanging(System.DateTime value);
    partial void OnCreateDateChanged();
    partial void OnOrderTypeChanging(int value);
    partial void OnOrderTypeChanged();
    partial void OnStatusChanging(int value);
    partial void OnStatusChanged();
    #endregion
		
		public OrderNumber()
		{
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_OrderNamrber", DbType="NVarChar(50) NOT NULL", CanBeNull=false, IsPrimaryKey=true)]
		public string OrderNamrber
		{
			get
			{
				return this._OrderNamrber;
			}
			set
			{
				if ((this._OrderNamrber != value))
				{
					this.OnOrderNamrberChanging(value);
					this.SendPropertyChanging();
					this._OrderNamrber = value;
					this.SendPropertyChanged("OrderNamrber");
					this.OnOrderNamrberChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CreateDate", DbType="DateTime NOT NULL")]
		public System.DateTime CreateDate
		{
			get
			{
				return this._CreateDate;
			}
			set
			{
				if ((this._CreateDate != value))
				{
					this.OnCreateDateChanging(value);
					this.SendPropertyChanging();
					this._CreateDate = value;
					this.SendPropertyChanged("CreateDate");
					this.OnCreateDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_OrderType", DbType="Int NOT NULL")]
		public int OrderType
		{
			get
			{
				return this._OrderType;
			}
			set
			{
				if ((this._OrderType != value))
				{
					this.OnOrderTypeChanging(value);
					this.SendPropertyChanging();
					this._OrderType = value;
					this.SendPropertyChanged("OrderType");
					this.OnOrderTypeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Status", DbType="Int NOT NULL")]
		public int Status
		{
			get
			{
				return this._Status;
			}
			set
			{
				if ((this._Status != value))
				{
					this.OnStatusChanging(value);
					this.SendPropertyChanging();
					this._Status = value;
					this.SendPropertyChanged("Status");
					this.OnStatusChanged();
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.ImportProfiles")]
	public partial class ImportProfile : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _Id;
		
		private string _Target;
		
		private string _Source;
		
		private int _CompanyId;
		
		private int _SourceIndex;
		
		private int _OrderType;
		
		private EntityRef<Company> _Company;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIdChanging(int value);
    partial void OnIdChanged();
    partial void OnTargetChanging(string value);
    partial void OnTargetChanged();
    partial void OnSourceChanging(string value);
    partial void OnSourceChanged();
    partial void OnCompanyIdChanging(int value);
    partial void OnCompanyIdChanged();
    partial void OnSourceIndexChanging(int value);
    partial void OnSourceIndexChanged();
    partial void OnOrderTypeChanging(int value);
    partial void OnOrderTypeChanged();
    #endregion
		
		public ImportProfile()
		{
			this._Company = default(EntityRef<Company>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Id", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int Id
		{
			get
			{
				return this._Id;
			}
			set
			{
				if ((this._Id != value))
				{
					this.OnIdChanging(value);
					this.SendPropertyChanging();
					this._Id = value;
					this.SendPropertyChanged("Id");
					this.OnIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Target", DbType="NVarChar(255) NOT NULL", CanBeNull=false)]
		public string Target
		{
			get
			{
				return this._Target;
			}
			set
			{
				if ((this._Target != value))
				{
					this.OnTargetChanging(value);
					this.SendPropertyChanging();
					this._Target = value;
					this.SendPropertyChanged("Target");
					this.OnTargetChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Source", DbType="NVarChar(255) NOT NULL", CanBeNull=false)]
		public string Source
		{
			get
			{
				return this._Source;
			}
			set
			{
				if ((this._Source != value))
				{
					this.OnSourceChanging(value);
					this.SendPropertyChanging();
					this._Source = value;
					this.SendPropertyChanged("Source");
					this.OnSourceChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CompanyId", DbType="Int NOT NULL")]
		public int CompanyId
		{
			get
			{
				return this._CompanyId;
			}
			set
			{
				if ((this._CompanyId != value))
				{
					if (this._Company.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnCompanyIdChanging(value);
					this.SendPropertyChanging();
					this._CompanyId = value;
					this.SendPropertyChanged("CompanyId");
					this.OnCompanyIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SourceIndex", DbType="Int NOT NULL")]
		public int SourceIndex
		{
			get
			{
				return this._SourceIndex;
			}
			set
			{
				if ((this._SourceIndex != value))
				{
					this.OnSourceIndexChanging(value);
					this.SendPropertyChanging();
					this._SourceIndex = value;
					this.SendPropertyChanged("SourceIndex");
					this.OnSourceIndexChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_OrderType", DbType="Int NOT NULL")]
		public int OrderType
		{
			get
			{
				return this._OrderType;
			}
			set
			{
				if ((this._OrderType != value))
				{
					this.OnOrderTypeChanging(value);
					this.SendPropertyChanging();
					this._OrderType = value;
					this.SendPropertyChanged("OrderType");
					this.OnOrderTypeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Company_ImportProfile", Storage="_Company", ThisKey="CompanyId", OtherKey="Id", IsForeignKey=true)]
		public Company Company
		{
			get
			{
				return this._Company.Entity;
			}
			set
			{
				Company previousValue = this._Company.Entity;
				if (((previousValue != value) 
							|| (this._Company.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Company.Entity = null;
						previousValue.ImportProfiles.Remove(this);
					}
					this._Company.Entity = value;
					if ((value != null))
					{
						value.ImportProfiles.Add(this);
						this._CompanyId = value.Id;
					}
					else
					{
						this._CompanyId = default(int);
					}
					this.SendPropertyChanged("Company");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.View_ProductStorages")]
	public partial class View_ProductStorage
	{
		
		private string _CompanyName;
		
		private int _CompanyId;
		
		private string _ProductChName;
		
		private string _ProductEngName;
		
		private string _ProductNumber1;
		
		private string _ProductNumber2;
		
		private int _ProductId;
		
		private string _CurrentProductNumber;
		
		private System.DateTime _EntryDate;
		
		private int _OriginalCount;
		
		private int _CurrentCount;
		
		private int _UsableCount;
		
		private System.Nullable<int> _AreaId;
		
		private string _Memo;
		
		private string _LotsNumber;
		
		private System.DateTime _ProductDate;
		
		private string _Spec;
		
		private string _BarCode;
		
		private int _SecurityCount;
		
		private System.Nullable<int> _ProductTypeId;
		
		private string _Name;
		
		public View_ProductStorage()
		{
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CompanyName", DbType="NVarChar(255) NOT NULL", CanBeNull=false)]
		public string CompanyName
		{
			get
			{
				return this._CompanyName;
			}
			set
			{
				if ((this._CompanyName != value))
				{
					this._CompanyName = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CompanyId", DbType="Int NOT NULL")]
		public int CompanyId
		{
			get
			{
				return this._CompanyId;
			}
			set
			{
				if ((this._CompanyId != value))
				{
					this._CompanyId = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ProductChName", DbType="NVarChar(255) NOT NULL", CanBeNull=false)]
		public string ProductChName
		{
			get
			{
				return this._ProductChName;
			}
			set
			{
				if ((this._ProductChName != value))
				{
					this._ProductChName = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ProductEngName", DbType="NVarChar(255)")]
		public string ProductEngName
		{
			get
			{
				return this._ProductEngName;
			}
			set
			{
				if ((this._ProductEngName != value))
				{
					this._ProductEngName = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ProductNumber1", DbType="NVarChar(255) NOT NULL", CanBeNull=false)]
		public string ProductNumber1
		{
			get
			{
				return this._ProductNumber1;
			}
			set
			{
				if ((this._ProductNumber1 != value))
				{
					this._ProductNumber1 = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ProductNumber2", DbType="NVarChar(255)")]
		public string ProductNumber2
		{
			get
			{
				return this._ProductNumber2;
			}
			set
			{
				if ((this._ProductNumber2 != value))
				{
					this._ProductNumber2 = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ProductId", DbType="Int NOT NULL")]
		public int ProductId
		{
			get
			{
				return this._ProductId;
			}
			set
			{
				if ((this._ProductId != value))
				{
					this._ProductId = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CurrentProductNumber", DbType="NVarChar(50) NOT NULL", CanBeNull=false)]
		public string CurrentProductNumber
		{
			get
			{
				return this._CurrentProductNumber;
			}
			set
			{
				if ((this._CurrentProductNumber != value))
				{
					this._CurrentProductNumber = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_EntryDate", DbType="DateTime NOT NULL")]
		public System.DateTime EntryDate
		{
			get
			{
				return this._EntryDate;
			}
			set
			{
				if ((this._EntryDate != value))
				{
					this._EntryDate = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_OriginalCount", DbType="Int NOT NULL")]
		public int OriginalCount
		{
			get
			{
				return this._OriginalCount;
			}
			set
			{
				if ((this._OriginalCount != value))
				{
					this._OriginalCount = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CurrentCount", DbType="Int NOT NULL")]
		public int CurrentCount
		{
			get
			{
				return this._CurrentCount;
			}
			set
			{
				if ((this._CurrentCount != value))
				{
					this._CurrentCount = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_UsableCount", DbType="Int NOT NULL")]
		public int UsableCount
		{
			get
			{
				return this._UsableCount;
			}
			set
			{
				if ((this._UsableCount != value))
				{
					this._UsableCount = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_AreaId", DbType="Int")]
		public System.Nullable<int> AreaId
		{
			get
			{
				return this._AreaId;
			}
			set
			{
				if ((this._AreaId != value))
				{
					this._AreaId = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Memo", DbType="NVarChar(1000)")]
		public string Memo
		{
			get
			{
				return this._Memo;
			}
			set
			{
				if ((this._Memo != value))
				{
					this._Memo = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_LotsNumber", DbType="NVarChar(50) NOT NULL", CanBeNull=false)]
		public string LotsNumber
		{
			get
			{
				return this._LotsNumber;
			}
			set
			{
				if ((this._LotsNumber != value))
				{
					this._LotsNumber = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ProductDate", DbType="DateTime NOT NULL")]
		public System.DateTime ProductDate
		{
			get
			{
				return this._ProductDate;
			}
			set
			{
				if ((this._ProductDate != value))
				{
					this._ProductDate = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Spec", DbType="NVarChar(255)")]
		public string Spec
		{
			get
			{
				return this._Spec;
			}
			set
			{
				if ((this._Spec != value))
				{
					this._Spec = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_BarCode", DbType="NVarChar(50)")]
		public string BarCode
		{
			get
			{
				return this._BarCode;
			}
			set
			{
				if ((this._BarCode != value))
				{
					this._BarCode = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SecurityCount", DbType="Int NOT NULL")]
		public int SecurityCount
		{
			get
			{
				return this._SecurityCount;
			}
			set
			{
				if ((this._SecurityCount != value))
				{
					this._SecurityCount = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ProductTypeId", DbType="Int")]
		public System.Nullable<int> ProductTypeId
		{
			get
			{
				return this._ProductTypeId;
			}
			set
			{
				if ((this._ProductTypeId != value))
				{
					this._ProductTypeId = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Name", DbType="NVarChar(255) NOT NULL", CanBeNull=false)]
		public string Name
		{
			get
			{
				return this._Name;
			}
			set
			{
				if ((this._Name != value))
				{
					this._Name = value;
				}
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.StorageAreas")]
	public partial class StorageArea : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _Id;
		
		private string _库位编号;
		
		private string _备注;
		
		private int _StorageRackId;
		
		private EntitySet<ProductStorage> _ProductStorages;
		
		private EntitySet<ProductStorageChange> _ProductStorageChanges;
		
		private EntityRef<StorageRack> _StorageRack;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIdChanging(int value);
    partial void OnIdChanged();
    partial void On库位编号Changing(string value);
    partial void On库位编号Changed();
    partial void On备注Changing(string value);
    partial void On备注Changed();
    partial void OnStorageRackIdChanging(int value);
    partial void OnStorageRackIdChanged();
    #endregion
		
		public StorageArea()
		{
			this._ProductStorages = new EntitySet<ProductStorage>(new Action<ProductStorage>(this.attach_ProductStorages), new Action<ProductStorage>(this.detach_ProductStorages));
			this._ProductStorageChanges = new EntitySet<ProductStorageChange>(new Action<ProductStorageChange>(this.attach_ProductStorageChanges), new Action<ProductStorageChange>(this.detach_ProductStorageChanges));
			this._StorageRack = default(EntityRef<StorageRack>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Id", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int Id
		{
			get
			{
				return this._Id;
			}
			set
			{
				if ((this._Id != value))
				{
					this.OnIdChanging(value);
					this.SendPropertyChanging();
					this._Id = value;
					this.SendPropertyChanged("Id");
					this.OnIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_库位编号", DbType="NVarChar(255) NOT NULL", CanBeNull=false)]
		public string 库位编号
		{
			get
			{
				return this._库位编号;
			}
			set
			{
				if ((this._库位编号 != value))
				{
					this.On库位编号Changing(value);
					this.SendPropertyChanging();
					this._库位编号 = value;
					this.SendPropertyChanged("库位编号");
					this.On库位编号Changed();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_备注", DbType="NVarChar(255)")]
		public string 备注
		{
			get
			{
				return this._备注;
			}
			set
			{
				if ((this._备注 != value))
				{
					this.On备注Changing(value);
					this.SendPropertyChanging();
					this._备注 = value;
					this.SendPropertyChanged("备注");
					this.On备注Changed();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_StorageRackId", DbType="Int NOT NULL")]
		public int StorageRackId
		{
			get
			{
				return this._StorageRackId;
			}
			set
			{
				if ((this._StorageRackId != value))
				{
					if (this._StorageRack.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnStorageRackIdChanging(value);
					this.SendPropertyChanging();
					this._StorageRackId = value;
					this.SendPropertyChanged("StorageRackId");
					this.OnStorageRackIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="StorageArea_ProductStorage", Storage="_ProductStorages", ThisKey="Id", OtherKey="AreaId")]
		public EntitySet<ProductStorage> ProductStorages
		{
			get
			{
				return this._ProductStorages;
			}
			set
			{
				this._ProductStorages.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="StorageArea_ProductStorageChange", Storage="_ProductStorageChanges", ThisKey="Id", OtherKey="AreaId")]
		public EntitySet<ProductStorageChange> ProductStorageChanges
		{
			get
			{
				return this._ProductStorageChanges;
			}
			set
			{
				this._ProductStorageChanges.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="StorageRack_StorageArea", Storage="_StorageRack", ThisKey="StorageRackId", OtherKey="id", IsForeignKey=true)]
		public StorageRack StorageRack
		{
			get
			{
				return this._StorageRack.Entity;
			}
			set
			{
				StorageRack previousValue = this._StorageRack.Entity;
				if (((previousValue != value) 
							|| (this._StorageRack.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._StorageRack.Entity = null;
						previousValue.StorageAreas.Remove(this);
					}
					this._StorageRack.Entity = value;
					if ((value != null))
					{
						value.StorageAreas.Add(this);
						this._StorageRackId = value.id;
					}
					else
					{
						this._StorageRackId = default(int);
					}
					this.SendPropertyChanged("StorageRack");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_ProductStorages(ProductStorage entity)
		{
			this.SendPropertyChanging();
			entity.StorageArea = this;
		}
		
		private void detach_ProductStorages(ProductStorage entity)
		{
			this.SendPropertyChanging();
			entity.StorageArea = null;
		}
		
		private void attach_ProductStorageChanges(ProductStorageChange entity)
		{
			this.SendPropertyChanging();
			entity.StorageArea = this;
		}
		
		private void detach_ProductStorageChanges(ProductStorageChange entity)
		{
			this.SendPropertyChanging();
			entity.StorageArea = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.RackArea")]
	public partial class RackArea : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _id;
		
		private string _AreaType;
		
		private EntitySet<StorageRack> _StorageRacks;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnidChanging(int value);
    partial void OnidChanged();
    partial void OnAreaTypeChanging(string value);
    partial void OnAreaTypeChanged();
    #endregion
		
		public RackArea()
		{
			this._StorageRacks = new EntitySet<StorageRack>(new Action<StorageRack>(this.attach_StorageRacks), new Action<StorageRack>(this.detach_StorageRacks));
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_id", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int id
		{
			get
			{
				return this._id;
			}
			set
			{
				if ((this._id != value))
				{
					this.OnidChanging(value);
					this.SendPropertyChanging();
					this._id = value;
					this.SendPropertyChanged("id");
					this.OnidChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_AreaType", DbType="NVarChar(255) NOT NULL", CanBeNull=false)]
		public string AreaType
		{
			get
			{
				return this._AreaType;
			}
			set
			{
				if ((this._AreaType != value))
				{
					this.OnAreaTypeChanging(value);
					this.SendPropertyChanging();
					this._AreaType = value;
					this.SendPropertyChanged("AreaType");
					this.OnAreaTypeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="RackArea_StorageRack", Storage="_StorageRacks", ThisKey="id", OtherKey="RackAreaID")]
		public EntitySet<StorageRack> StorageRacks
		{
			get
			{
				return this._StorageRacks;
			}
			set
			{
				this._StorageRacks.Assign(value);
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_StorageRacks(StorageRack entity)
		{
			this.SendPropertyChanging();
			entity.RackArea = this;
		}
		
		private void detach_StorageRacks(StorageRack entity)
		{
			this.SendPropertyChanging();
			entity.RackArea = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.RackType")]
	public partial class RackType : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _id;
		
		private string _TypeName;
		
		private EntitySet<StorageRack> _StorageRacks;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnidChanging(int value);
    partial void OnidChanged();
    partial void OnTypeNameChanging(string value);
    partial void OnTypeNameChanged();
    #endregion
		
		public RackType()
		{
			this._StorageRacks = new EntitySet<StorageRack>(new Action<StorageRack>(this.attach_StorageRacks), new Action<StorageRack>(this.detach_StorageRacks));
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_id", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int id
		{
			get
			{
				return this._id;
			}
			set
			{
				if ((this._id != value))
				{
					this.OnidChanging(value);
					this.SendPropertyChanging();
					this._id = value;
					this.SendPropertyChanged("id");
					this.OnidChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TypeName", DbType="NVarChar(255) NOT NULL", CanBeNull=false)]
		public string TypeName
		{
			get
			{
				return this._TypeName;
			}
			set
			{
				if ((this._TypeName != value))
				{
					this.OnTypeNameChanging(value);
					this.SendPropertyChanging();
					this._TypeName = value;
					this.SendPropertyChanged("TypeName");
					this.OnTypeNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="RackType_StorageRack", Storage="_StorageRacks", ThisKey="id", OtherKey="RackTypeID")]
		public EntitySet<StorageRack> StorageRacks
		{
			get
			{
				return this._StorageRacks;
			}
			set
			{
				this._StorageRacks.Assign(value);
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_StorageRacks(StorageRack entity)
		{
			this.SendPropertyChanging();
			entity.RackType = this;
		}
		
		private void detach_StorageRacks(StorageRack entity)
		{
			this.SendPropertyChanging();
			entity.RackType = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Storages")]
	public partial class Storage : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _Id;
		
		private string _仓库编号;
		
		private string _仓库名称;
		
		private string _仓库地址;
		
		private string _备注;
		
		private EntitySet<StorageRack> _StorageRacks;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIdChanging(int value);
    partial void OnIdChanged();
    partial void On仓库编号Changing(string value);
    partial void On仓库编号Changed();
    partial void On仓库名称Changing(string value);
    partial void On仓库名称Changed();
    partial void On仓库地址Changing(string value);
    partial void On仓库地址Changed();
    partial void On备注Changing(string value);
    partial void On备注Changed();
    #endregion
		
		public Storage()
		{
			this._StorageRacks = new EntitySet<StorageRack>(new Action<StorageRack>(this.attach_StorageRacks), new Action<StorageRack>(this.detach_StorageRacks));
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Id", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int Id
		{
			get
			{
				return this._Id;
			}
			set
			{
				if ((this._Id != value))
				{
					this.OnIdChanging(value);
					this.SendPropertyChanging();
					this._Id = value;
					this.SendPropertyChanged("Id");
					this.OnIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_仓库编号", DbType="NVarChar(255) NOT NULL", CanBeNull=false)]
		public string 仓库编号
		{
			get
			{
				return this._仓库编号;
			}
			set
			{
				if ((this._仓库编号 != value))
				{
					this.On仓库编号Changing(value);
					this.SendPropertyChanging();
					this._仓库编号 = value;
					this.SendPropertyChanged("仓库编号");
					this.On仓库编号Changed();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_仓库名称", DbType="NVarChar(255)")]
		public string 仓库名称
		{
			get
			{
				return this._仓库名称;
			}
			set
			{
				if ((this._仓库名称 != value))
				{
					this.On仓库名称Changing(value);
					this.SendPropertyChanging();
					this._仓库名称 = value;
					this.SendPropertyChanged("仓库名称");
					this.On仓库名称Changed();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_仓库地址", DbType="NVarChar(255)")]
		public string 仓库地址
		{
			get
			{
				return this._仓库地址;
			}
			set
			{
				if ((this._仓库地址 != value))
				{
					this.On仓库地址Changing(value);
					this.SendPropertyChanging();
					this._仓库地址 = value;
					this.SendPropertyChanged("仓库地址");
					this.On仓库地址Changed();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_备注", DbType="NVarChar(255)")]
		public string 备注
		{
			get
			{
				return this._备注;
			}
			set
			{
				if ((this._备注 != value))
				{
					this.On备注Changing(value);
					this.SendPropertyChanging();
					this._备注 = value;
					this.SendPropertyChanged("备注");
					this.On备注Changed();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Storage_StorageRack", Storage="_StorageRacks", ThisKey="Id", OtherKey="StorageID")]
		public EntitySet<StorageRack> StorageRacks
		{
			get
			{
				return this._StorageRacks;
			}
			set
			{
				this._StorageRacks.Assign(value);
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_StorageRacks(StorageRack entity)
		{
			this.SendPropertyChanging();
			entity.Storage = this;
		}
		
		private void detach_StorageRacks(StorageRack entity)
		{
			this.SendPropertyChanging();
			entity.Storage = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.InputOrders")]
	public partial class InputOrder : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _ID;
		
		private string _InputOrderNumber;
		
		private string _FromWhere;
		
		private string _Invoice;
		
		private int _CompanyId;
		
		private System.DateTime _PreInputDate;
		
		private System.Nullable<System.DateTime> _EnterDate;
		
		private string _EnterUser;
		
		private string _EnterConfirmUser;
		
		private string _Status;
		
		private EntitySet<InputOrderDetail> _InputOrderDetails;
		
		private EntityRef<Company> _Company;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIDChanging(int value);
    partial void OnIDChanged();
    partial void OnInputOrderNumberChanging(string value);
    partial void OnInputOrderNumberChanged();
    partial void OnFromWhereChanging(string value);
    partial void OnFromWhereChanged();
    partial void OnInvoiceChanging(string value);
    partial void OnInvoiceChanged();
    partial void OnCompanyIdChanging(int value);
    partial void OnCompanyIdChanged();
    partial void OnPreInputDateChanging(System.DateTime value);
    partial void OnPreInputDateChanged();
    partial void OnEnterDateChanging(System.Nullable<System.DateTime> value);
    partial void OnEnterDateChanged();
    partial void OnEnterUserChanging(string value);
    partial void OnEnterUserChanged();
    partial void OnEnterConfirmUserChanging(string value);
    partial void OnEnterConfirmUserChanged();
    partial void OnStatusChanging(string value);
    partial void OnStatusChanged();
    #endregion
		
		public InputOrder()
		{
			this._InputOrderDetails = new EntitySet<InputOrderDetail>(new Action<InputOrderDetail>(this.attach_InputOrderDetails), new Action<InputOrderDetail>(this.detach_InputOrderDetails));
			this._Company = default(EntityRef<Company>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ID", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int ID
		{
			get
			{
				return this._ID;
			}
			set
			{
				if ((this._ID != value))
				{
					this.OnIDChanging(value);
					this.SendPropertyChanging();
					this._ID = value;
					this.SendPropertyChanged("ID");
					this.OnIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_InputOrderNumber", DbType="NVarChar(50) NOT NULL", CanBeNull=false)]
		public string InputOrderNumber
		{
			get
			{
				return this._InputOrderNumber;
			}
			set
			{
				if ((this._InputOrderNumber != value))
				{
					this.OnInputOrderNumberChanging(value);
					this.SendPropertyChanging();
					this._InputOrderNumber = value;
					this.SendPropertyChanged("InputOrderNumber");
					this.OnInputOrderNumberChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_FromWhere", DbType="NVarChar(500) NOT NULL", CanBeNull=false)]
		public string FromWhere
		{
			get
			{
				return this._FromWhere;
			}
			set
			{
				if ((this._FromWhere != value))
				{
					this.OnFromWhereChanging(value);
					this.SendPropertyChanging();
					this._FromWhere = value;
					this.SendPropertyChanged("FromWhere");
					this.OnFromWhereChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Invoice", DbType="NVarChar(50)")]
		public string Invoice
		{
			get
			{
				return this._Invoice;
			}
			set
			{
				if ((this._Invoice != value))
				{
					this.OnInvoiceChanging(value);
					this.SendPropertyChanging();
					this._Invoice = value;
					this.SendPropertyChanged("Invoice");
					this.OnInvoiceChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CompanyId", DbType="Int NOT NULL")]
		public int CompanyId
		{
			get
			{
				return this._CompanyId;
			}
			set
			{
				if ((this._CompanyId != value))
				{
					if (this._Company.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnCompanyIdChanging(value);
					this.SendPropertyChanging();
					this._CompanyId = value;
					this.SendPropertyChanged("CompanyId");
					this.OnCompanyIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PreInputDate", DbType="DateTime NOT NULL")]
		public System.DateTime PreInputDate
		{
			get
			{
				return this._PreInputDate;
			}
			set
			{
				if ((this._PreInputDate != value))
				{
					this.OnPreInputDateChanging(value);
					this.SendPropertyChanging();
					this._PreInputDate = value;
					this.SendPropertyChanged("PreInputDate");
					this.OnPreInputDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_EnterDate", DbType="DateTime")]
		public System.Nullable<System.DateTime> EnterDate
		{
			get
			{
				return this._EnterDate;
			}
			set
			{
				if ((this._EnterDate != value))
				{
					this.OnEnterDateChanging(value);
					this.SendPropertyChanging();
					this._EnterDate = value;
					this.SendPropertyChanged("EnterDate");
					this.OnEnterDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_EnterUser", DbType="NVarChar(50) NOT NULL", CanBeNull=false)]
		public string EnterUser
		{
			get
			{
				return this._EnterUser;
			}
			set
			{
				if ((this._EnterUser != value))
				{
					this.OnEnterUserChanging(value);
					this.SendPropertyChanging();
					this._EnterUser = value;
					this.SendPropertyChanged("EnterUser");
					this.OnEnterUserChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_EnterConfirmUser", DbType="NVarChar(50)")]
		public string EnterConfirmUser
		{
			get
			{
				return this._EnterConfirmUser;
			}
			set
			{
				if ((this._EnterConfirmUser != value))
				{
					this.OnEnterConfirmUserChanging(value);
					this.SendPropertyChanging();
					this._EnterConfirmUser = value;
					this.SendPropertyChanged("EnterConfirmUser");
					this.OnEnterConfirmUserChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Status", DbType="NVarChar(50) NOT NULL", CanBeNull=false)]
		public string Status
		{
			get
			{
				return this._Status;
			}
			set
			{
				if ((this._Status != value))
				{
					this.OnStatusChanging(value);
					this.SendPropertyChanging();
					this._Status = value;
					this.SendPropertyChanged("Status");
					this.OnStatusChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="InputOrder_InputOrderDetail", Storage="_InputOrderDetails", ThisKey="ID", OtherKey="InputOrderId")]
		public EntitySet<InputOrderDetail> InputOrderDetails
		{
			get
			{
				return this._InputOrderDetails;
			}
			set
			{
				this._InputOrderDetails.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Company_InputOrder", Storage="_Company", ThisKey="CompanyId", OtherKey="Id", IsForeignKey=true)]
		public Company Company
		{
			get
			{
				return this._Company.Entity;
			}
			set
			{
				Company previousValue = this._Company.Entity;
				if (((previousValue != value) 
							|| (this._Company.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Company.Entity = null;
						previousValue.InputOrders.Remove(this);
					}
					this._Company.Entity = value;
					if ((value != null))
					{
						value.InputOrders.Add(this);
						this._CompanyId = value.Id;
					}
					else
					{
						this._CompanyId = default(int);
					}
					this.SendPropertyChanged("Company");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_InputOrderDetails(InputOrderDetail entity)
		{
			this.SendPropertyChanging();
			entity.InputOrder = this;
		}
		
		private void detach_InputOrderDetails(InputOrderDetail entity)
		{
			this.SendPropertyChanging();
			entity.InputOrder = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.InputOrderDetails")]
	public partial class InputOrderDetail : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _ID;
		
		private int _InputOrderId;
		
		private int _ProductId;
		
		private int _CompanyId;
		
		private string _CurrentProductNumber;
		
		private System.Nullable<int> _StorageAreaId;
		
		private int _InputCount;
		
		private System.Nullable<System.DateTime> _ProductDate;
		
		private string _LotsNumber;
		
		private string _Remark;
		
		private EntitySet<ProductStorage> _ProductStorages;
		
		private EntityRef<Company> _Company;
		
		private EntityRef<InputOrder> _InputOrder;
		
		private EntityRef<Product> _Product;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIDChanging(int value);
    partial void OnIDChanged();
    partial void OnInputOrderIdChanging(int value);
    partial void OnInputOrderIdChanged();
    partial void OnProductIdChanging(int value);
    partial void OnProductIdChanged();
    partial void OnCompanyIdChanging(int value);
    partial void OnCompanyIdChanged();
    partial void OnCurrentProductNumberChanging(string value);
    partial void OnCurrentProductNumberChanged();
    partial void OnStorageAreaIdChanging(System.Nullable<int> value);
    partial void OnStorageAreaIdChanged();
    partial void OnInputCountChanging(int value);
    partial void OnInputCountChanged();
    partial void OnProductDateChanging(System.Nullable<System.DateTime> value);
    partial void OnProductDateChanged();
    partial void OnLotsNumberChanging(string value);
    partial void OnLotsNumberChanged();
    partial void OnRemarkChanging(string value);
    partial void OnRemarkChanged();
    #endregion
		
		public InputOrderDetail()
		{
			this._ProductStorages = new EntitySet<ProductStorage>(new Action<ProductStorage>(this.attach_ProductStorages), new Action<ProductStorage>(this.detach_ProductStorages));
			this._Company = default(EntityRef<Company>);
			this._InputOrder = default(EntityRef<InputOrder>);
			this._Product = default(EntityRef<Product>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ID", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int ID
		{
			get
			{
				return this._ID;
			}
			set
			{
				if ((this._ID != value))
				{
					this.OnIDChanging(value);
					this.SendPropertyChanging();
					this._ID = value;
					this.SendPropertyChanged("ID");
					this.OnIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_InputOrderId", DbType="Int NOT NULL")]
		public int InputOrderId
		{
			get
			{
				return this._InputOrderId;
			}
			set
			{
				if ((this._InputOrderId != value))
				{
					if (this._InputOrder.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnInputOrderIdChanging(value);
					this.SendPropertyChanging();
					this._InputOrderId = value;
					this.SendPropertyChanged("InputOrderId");
					this.OnInputOrderIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ProductId", DbType="Int NOT NULL")]
		public int ProductId
		{
			get
			{
				return this._ProductId;
			}
			set
			{
				if ((this._ProductId != value))
				{
					if (this._Product.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnProductIdChanging(value);
					this.SendPropertyChanging();
					this._ProductId = value;
					this.SendPropertyChanged("ProductId");
					this.OnProductIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CompanyId", DbType="Int NOT NULL")]
		public int CompanyId
		{
			get
			{
				return this._CompanyId;
			}
			set
			{
				if ((this._CompanyId != value))
				{
					if (this._Company.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnCompanyIdChanging(value);
					this.SendPropertyChanging();
					this._CompanyId = value;
					this.SendPropertyChanged("CompanyId");
					this.OnCompanyIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CurrentProductNumber", DbType="NVarChar(50)")]
		public string CurrentProductNumber
		{
			get
			{
				return this._CurrentProductNumber;
			}
			set
			{
				if ((this._CurrentProductNumber != value))
				{
					this.OnCurrentProductNumberChanging(value);
					this.SendPropertyChanging();
					this._CurrentProductNumber = value;
					this.SendPropertyChanged("CurrentProductNumber");
					this.OnCurrentProductNumberChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_StorageAreaId", DbType="Int")]
		public System.Nullable<int> StorageAreaId
		{
			get
			{
				return this._StorageAreaId;
			}
			set
			{
				if ((this._StorageAreaId != value))
				{
					this.OnStorageAreaIdChanging(value);
					this.SendPropertyChanging();
					this._StorageAreaId = value;
					this.SendPropertyChanged("StorageAreaId");
					this.OnStorageAreaIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_InputCount", DbType="Int NOT NULL")]
		public int InputCount
		{
			get
			{
				return this._InputCount;
			}
			set
			{
				if ((this._InputCount != value))
				{
					this.OnInputCountChanging(value);
					this.SendPropertyChanging();
					this._InputCount = value;
					this.SendPropertyChanged("InputCount");
					this.OnInputCountChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ProductDate", DbType="DateTime")]
		public System.Nullable<System.DateTime> ProductDate
		{
			get
			{
				return this._ProductDate;
			}
			set
			{
				if ((this._ProductDate != value))
				{
					this.OnProductDateChanging(value);
					this.SendPropertyChanging();
					this._ProductDate = value;
					this.SendPropertyChanged("ProductDate");
					this.OnProductDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_LotsNumber", DbType="NVarChar(50)")]
		public string LotsNumber
		{
			get
			{
				return this._LotsNumber;
			}
			set
			{
				if ((this._LotsNumber != value))
				{
					this.OnLotsNumberChanging(value);
					this.SendPropertyChanging();
					this._LotsNumber = value;
					this.SendPropertyChanged("LotsNumber");
					this.OnLotsNumberChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Remark", DbType="NVarChar(1000)")]
		public string Remark
		{
			get
			{
				return this._Remark;
			}
			set
			{
				if ((this._Remark != value))
				{
					this.OnRemarkChanging(value);
					this.SendPropertyChanging();
					this._Remark = value;
					this.SendPropertyChanged("Remark");
					this.OnRemarkChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="InputOrderDetail_ProductStorage", Storage="_ProductStorages", ThisKey="ID", OtherKey="InputDetailId")]
		public EntitySet<ProductStorage> ProductStorages
		{
			get
			{
				return this._ProductStorages;
			}
			set
			{
				this._ProductStorages.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Company_InputOrderDetail", Storage="_Company", ThisKey="CompanyId", OtherKey="Id", IsForeignKey=true)]
		public Company Company
		{
			get
			{
				return this._Company.Entity;
			}
			set
			{
				Company previousValue = this._Company.Entity;
				if (((previousValue != value) 
							|| (this._Company.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Company.Entity = null;
						previousValue.InputOrderDetails.Remove(this);
					}
					this._Company.Entity = value;
					if ((value != null))
					{
						value.InputOrderDetails.Add(this);
						this._CompanyId = value.Id;
					}
					else
					{
						this._CompanyId = default(int);
					}
					this.SendPropertyChanged("Company");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="InputOrder_InputOrderDetail", Storage="_InputOrder", ThisKey="InputOrderId", OtherKey="ID", IsForeignKey=true)]
		public InputOrder InputOrder
		{
			get
			{
				return this._InputOrder.Entity;
			}
			set
			{
				InputOrder previousValue = this._InputOrder.Entity;
				if (((previousValue != value) 
							|| (this._InputOrder.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._InputOrder.Entity = null;
						previousValue.InputOrderDetails.Remove(this);
					}
					this._InputOrder.Entity = value;
					if ((value != null))
					{
						value.InputOrderDetails.Add(this);
						this._InputOrderId = value.ID;
					}
					else
					{
						this._InputOrderId = default(int);
					}
					this.SendPropertyChanged("InputOrder");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Product_InputOrderDetail", Storage="_Product", ThisKey="ProductId", OtherKey="Id", IsForeignKey=true)]
		public Product Product
		{
			get
			{
				return this._Product.Entity;
			}
			set
			{
				Product previousValue = this._Product.Entity;
				if (((previousValue != value) 
							|| (this._Product.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Product.Entity = null;
						previousValue.InputOrderDetails.Remove(this);
					}
					this._Product.Entity = value;
					if ((value != null))
					{
						value.InputOrderDetails.Add(this);
						this._ProductId = value.Id;
					}
					else
					{
						this._ProductId = default(int);
					}
					this.SendPropertyChanged("Product");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_ProductStorages(ProductStorage entity)
		{
			this.SendPropertyChanging();
			entity.InputOrderDetail = this;
		}
		
		private void detach_ProductStorages(ProductStorage entity)
		{
			this.SendPropertyChanging();
			entity.InputOrderDetail = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.VewAssingedDeliveryOrderDetails")]
	public partial class VewAssingedDeliveryOrderDetail
	{
		
		private int _AssignCount;
		
		private System.Nullable<System.DateTime> _ProductDate;
		
		private string _LotsNumber;
		
		private string _InputInvoice;
		
		private string _CurrentProductNumber;
		
		private System.Nullable<int> _StorageAreaId;
		
		private bool _IsSucess;
		
		private System.Nullable<int> _Id;
		
		private string _warehouse;
		
		private string _StorageArea;
		
		private int _DeliveryOrderId;
		
		private int _ProductId;
		
		private int _DeliveryCount;
		
		private System.Nullable<int> _ProductStorageId;
		
		public VewAssingedDeliveryOrderDetail()
		{
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_AssignCount", DbType="Int NOT NULL")]
		public int AssignCount
		{
			get
			{
				return this._AssignCount;
			}
			set
			{
				if ((this._AssignCount != value))
				{
					this._AssignCount = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ProductDate", DbType="DateTime")]
		public System.Nullable<System.DateTime> ProductDate
		{
			get
			{
				return this._ProductDate;
			}
			set
			{
				if ((this._ProductDate != value))
				{
					this._ProductDate = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_LotsNumber", DbType="NVarChar(50)")]
		public string LotsNumber
		{
			get
			{
				return this._LotsNumber;
			}
			set
			{
				if ((this._LotsNumber != value))
				{
					this._LotsNumber = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_InputInvoice", DbType="NVarChar(50)")]
		public string InputInvoice
		{
			get
			{
				return this._InputInvoice;
			}
			set
			{
				if ((this._InputInvoice != value))
				{
					this._InputInvoice = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CurrentProductNumber", DbType="NVarChar(50)")]
		public string CurrentProductNumber
		{
			get
			{
				return this._CurrentProductNumber;
			}
			set
			{
				if ((this._CurrentProductNumber != value))
				{
					this._CurrentProductNumber = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_StorageAreaId", DbType="Int")]
		public System.Nullable<int> StorageAreaId
		{
			get
			{
				return this._StorageAreaId;
			}
			set
			{
				if ((this._StorageAreaId != value))
				{
					this._StorageAreaId = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IsSucess", DbType="Bit NOT NULL")]
		public bool IsSucess
		{
			get
			{
				return this._IsSucess;
			}
			set
			{
				if ((this._IsSucess != value))
				{
					this._IsSucess = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Id", DbType="Int")]
		public System.Nullable<int> Id
		{
			get
			{
				return this._Id;
			}
			set
			{
				if ((this._Id != value))
				{
					this._Id = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_warehouse", DbType="NVarChar(255)")]
		public string warehouse
		{
			get
			{
				return this._warehouse;
			}
			set
			{
				if ((this._warehouse != value))
				{
					this._warehouse = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_StorageArea", DbType="NVarChar(512)")]
		public string StorageArea
		{
			get
			{
				return this._StorageArea;
			}
			set
			{
				if ((this._StorageArea != value))
				{
					this._StorageArea = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DeliveryOrderId", DbType="Int NOT NULL")]
		public int DeliveryOrderId
		{
			get
			{
				return this._DeliveryOrderId;
			}
			set
			{
				if ((this._DeliveryOrderId != value))
				{
					this._DeliveryOrderId = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ProductId", DbType="Int NOT NULL")]
		public int ProductId
		{
			get
			{
				return this._ProductId;
			}
			set
			{
				if ((this._ProductId != value))
				{
					this._ProductId = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DeliveryCount", DbType="Int NOT NULL")]
		public int DeliveryCount
		{
			get
			{
				return this._DeliveryCount;
			}
			set
			{
				if ((this._DeliveryCount != value))
				{
					this._DeliveryCount = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ProductStorageId", DbType="Int NOT NULL")]
		public System.Nullable<int> ProductStorageId
		{
			get
			{
				return this._ProductStorageId;
			}
			set
			{
				if ((this._ProductStorageId != value))
				{
					this._ProductStorageId = value;
				}
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Products")]
	public partial class Product : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _Id;
		
		private string _ProductChName;
		
		private string _ProductEngName;
		
		private string _Brand;
		
		private string _ProductNumber1;
		
		private string _ProductNumber2;
		
		private string _Spec;
		
		private int _CompanyId;
		
		private string _BarCode;
		
		private int _ShelfLife;
		
		private int _PreWorningDays;
		
		private System.Nullable<int> _ProductTypeId;
		
		private int _SecurityCount;
		
		private System.Nullable<int> _Weight;
		
		private int _Volume;
		
		private int _Length;
		
		private int _Height;
		
		private int _Width;
		
		private int _LayeredCount;
		
		private decimal _UnitPrice;
		
		private System.Nullable<int> _CurrencyUnitId;
		
		private EntitySet<InputOrderDetail> _InputOrderDetails;
		
		private EntitySet<AssignedDeliveryOrderDetail> _AssignedDeliveryOrderDetails;
		
		private EntitySet<ProductStorage> _ProductStorages;
		
		private EntitySet<DeliveryOrderDetail> _DeliveryOrderDetails;
		
		private EntityRef<CurrencyUnit> _CurrencyUnit;
		
		private EntityRef<ProductType> _ProductType;
		
		private EntityRef<Company> _Company;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIdChanging(int value);
    partial void OnIdChanged();
    partial void OnProductChNameChanging(string value);
    partial void OnProductChNameChanged();
    partial void OnProductEngNameChanging(string value);
    partial void OnProductEngNameChanged();
    partial void OnBrandChanging(string value);
    partial void OnBrandChanged();
    partial void OnProductNumber1Changing(string value);
    partial void OnProductNumber1Changed();
    partial void OnProductNumber2Changing(string value);
    partial void OnProductNumber2Changed();
    partial void OnSpecChanging(string value);
    partial void OnSpecChanged();
    partial void OnCompanyIdChanging(int value);
    partial void OnCompanyIdChanged();
    partial void OnBarCodeChanging(string value);
    partial void OnBarCodeChanged();
    partial void OnShelfLifeChanging(int value);
    partial void OnShelfLifeChanged();
    partial void OnPreWorningDaysChanging(int value);
    partial void OnPreWorningDaysChanged();
    partial void OnProductTypeIdChanging(System.Nullable<int> value);
    partial void OnProductTypeIdChanged();
    partial void OnSecurityCountChanging(int value);
    partial void OnSecurityCountChanged();
    partial void OnWeightChanging(System.Nullable<int> value);
    partial void OnWeightChanged();
    partial void OnVolumeChanging(int value);
    partial void OnVolumeChanged();
    partial void OnLengthChanging(int value);
    partial void OnLengthChanged();
    partial void OnHeightChanging(int value);
    partial void OnHeightChanged();
    partial void OnWidthChanging(int value);
    partial void OnWidthChanged();
    partial void OnLayeredCountChanging(int value);
    partial void OnLayeredCountChanged();
    partial void OnUnitPriceChanging(decimal value);
    partial void OnUnitPriceChanged();
    partial void OnCurrencyUnitIdChanging(System.Nullable<int> value);
    partial void OnCurrencyUnitIdChanged();
    #endregion
		
		public Product()
		{
			this._InputOrderDetails = new EntitySet<InputOrderDetail>(new Action<InputOrderDetail>(this.attach_InputOrderDetails), new Action<InputOrderDetail>(this.detach_InputOrderDetails));
			this._AssignedDeliveryOrderDetails = new EntitySet<AssignedDeliveryOrderDetail>(new Action<AssignedDeliveryOrderDetail>(this.attach_AssignedDeliveryOrderDetails), new Action<AssignedDeliveryOrderDetail>(this.detach_AssignedDeliveryOrderDetails));
			this._ProductStorages = new EntitySet<ProductStorage>(new Action<ProductStorage>(this.attach_ProductStorages), new Action<ProductStorage>(this.detach_ProductStorages));
			this._DeliveryOrderDetails = new EntitySet<DeliveryOrderDetail>(new Action<DeliveryOrderDetail>(this.attach_DeliveryOrderDetails), new Action<DeliveryOrderDetail>(this.detach_DeliveryOrderDetails));
			this._CurrencyUnit = default(EntityRef<CurrencyUnit>);
			this._ProductType = default(EntityRef<ProductType>);
			this._Company = default(EntityRef<Company>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Id", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int Id
		{
			get
			{
				return this._Id;
			}
			set
			{
				if ((this._Id != value))
				{
					this.OnIdChanging(value);
					this.SendPropertyChanging();
					this._Id = value;
					this.SendPropertyChanged("Id");
					this.OnIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ProductChName", DbType="NVarChar(255) NOT NULL", CanBeNull=false)]
		public string ProductChName
		{
			get
			{
				return this._ProductChName;
			}
			set
			{
				if ((this._ProductChName != value))
				{
					this.OnProductChNameChanging(value);
					this.SendPropertyChanging();
					this._ProductChName = value;
					this.SendPropertyChanged("ProductChName");
					this.OnProductChNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ProductEngName", DbType="NVarChar(255)")]
		public string ProductEngName
		{
			get
			{
				return this._ProductEngName;
			}
			set
			{
				if ((this._ProductEngName != value))
				{
					this.OnProductEngNameChanging(value);
					this.SendPropertyChanging();
					this._ProductEngName = value;
					this.SendPropertyChanged("ProductEngName");
					this.OnProductEngNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Brand", DbType="NVarChar(255)")]
		public string Brand
		{
			get
			{
				return this._Brand;
			}
			set
			{
				if ((this._Brand != value))
				{
					this.OnBrandChanging(value);
					this.SendPropertyChanging();
					this._Brand = value;
					this.SendPropertyChanged("Brand");
					this.OnBrandChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ProductNumber1", DbType="NVarChar(255) NOT NULL", CanBeNull=false)]
		public string ProductNumber1
		{
			get
			{
				return this._ProductNumber1;
			}
			set
			{
				if ((this._ProductNumber1 != value))
				{
					this.OnProductNumber1Changing(value);
					this.SendPropertyChanging();
					this._ProductNumber1 = value;
					this.SendPropertyChanged("ProductNumber1");
					this.OnProductNumber1Changed();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ProductNumber2", DbType="NVarChar(255)")]
		public string ProductNumber2
		{
			get
			{
				return this._ProductNumber2;
			}
			set
			{
				if ((this._ProductNumber2 != value))
				{
					this.OnProductNumber2Changing(value);
					this.SendPropertyChanging();
					this._ProductNumber2 = value;
					this.SendPropertyChanged("ProductNumber2");
					this.OnProductNumber2Changed();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Spec", DbType="NVarChar(255)")]
		public string Spec
		{
			get
			{
				return this._Spec;
			}
			set
			{
				if ((this._Spec != value))
				{
					this.OnSpecChanging(value);
					this.SendPropertyChanging();
					this._Spec = value;
					this.SendPropertyChanged("Spec");
					this.OnSpecChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CompanyId", DbType="Int NOT NULL")]
		public int CompanyId
		{
			get
			{
				return this._CompanyId;
			}
			set
			{
				if ((this._CompanyId != value))
				{
					if (this._Company.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnCompanyIdChanging(value);
					this.SendPropertyChanging();
					this._CompanyId = value;
					this.SendPropertyChanged("CompanyId");
					this.OnCompanyIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_BarCode", DbType="NVarChar(50)")]
		public string BarCode
		{
			get
			{
				return this._BarCode;
			}
			set
			{
				if ((this._BarCode != value))
				{
					this.OnBarCodeChanging(value);
					this.SendPropertyChanging();
					this._BarCode = value;
					this.SendPropertyChanged("BarCode");
					this.OnBarCodeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ShelfLife", DbType="Int NOT NULL")]
		public int ShelfLife
		{
			get
			{
				return this._ShelfLife;
			}
			set
			{
				if ((this._ShelfLife != value))
				{
					this.OnShelfLifeChanging(value);
					this.SendPropertyChanging();
					this._ShelfLife = value;
					this.SendPropertyChanged("ShelfLife");
					this.OnShelfLifeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PreWorningDays", DbType="Int NOT NULL")]
		public int PreWorningDays
		{
			get
			{
				return this._PreWorningDays;
			}
			set
			{
				if ((this._PreWorningDays != value))
				{
					this.OnPreWorningDaysChanging(value);
					this.SendPropertyChanging();
					this._PreWorningDays = value;
					this.SendPropertyChanged("PreWorningDays");
					this.OnPreWorningDaysChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ProductTypeId", DbType="Int")]
		public System.Nullable<int> ProductTypeId
		{
			get
			{
				return this._ProductTypeId;
			}
			set
			{
				if ((this._ProductTypeId != value))
				{
					if (this._ProductType.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnProductTypeIdChanging(value);
					this.SendPropertyChanging();
					this._ProductTypeId = value;
					this.SendPropertyChanged("ProductTypeId");
					this.OnProductTypeIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SecurityCount", DbType="Int NOT NULL")]
		public int SecurityCount
		{
			get
			{
				return this._SecurityCount;
			}
			set
			{
				if ((this._SecurityCount != value))
				{
					this.OnSecurityCountChanging(value);
					this.SendPropertyChanging();
					this._SecurityCount = value;
					this.SendPropertyChanged("SecurityCount");
					this.OnSecurityCountChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Weight", DbType="Int")]
		public System.Nullable<int> Weight
		{
			get
			{
				return this._Weight;
			}
			set
			{
				if ((this._Weight != value))
				{
					this.OnWeightChanging(value);
					this.SendPropertyChanging();
					this._Weight = value;
					this.SendPropertyChanged("Weight");
					this.OnWeightChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Volume", DbType="Int NOT NULL")]
		public int Volume
		{
			get
			{
				return this._Volume;
			}
			set
			{
				if ((this._Volume != value))
				{
					this.OnVolumeChanging(value);
					this.SendPropertyChanging();
					this._Volume = value;
					this.SendPropertyChanged("Volume");
					this.OnVolumeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Length", DbType="Int NOT NULL")]
		public int Length
		{
			get
			{
				return this._Length;
			}
			set
			{
				if ((this._Length != value))
				{
					this.OnLengthChanging(value);
					this.SendPropertyChanging();
					this._Length = value;
					this.SendPropertyChanged("Length");
					this.OnLengthChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Height", DbType="Int NOT NULL")]
		public int Height
		{
			get
			{
				return this._Height;
			}
			set
			{
				if ((this._Height != value))
				{
					this.OnHeightChanging(value);
					this.SendPropertyChanging();
					this._Height = value;
					this.SendPropertyChanged("Height");
					this.OnHeightChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Width", DbType="Int NOT NULL")]
		public int Width
		{
			get
			{
				return this._Width;
			}
			set
			{
				if ((this._Width != value))
				{
					this.OnWidthChanging(value);
					this.SendPropertyChanging();
					this._Width = value;
					this.SendPropertyChanged("Width");
					this.OnWidthChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_LayeredCount", DbType="Int NOT NULL")]
		public int LayeredCount
		{
			get
			{
				return this._LayeredCount;
			}
			set
			{
				if ((this._LayeredCount != value))
				{
					this.OnLayeredCountChanging(value);
					this.SendPropertyChanging();
					this._LayeredCount = value;
					this.SendPropertyChanged("LayeredCount");
					this.OnLayeredCountChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_UnitPrice", DbType="Decimal(18,0) NOT NULL")]
		public decimal UnitPrice
		{
			get
			{
				return this._UnitPrice;
			}
			set
			{
				if ((this._UnitPrice != value))
				{
					this.OnUnitPriceChanging(value);
					this.SendPropertyChanging();
					this._UnitPrice = value;
					this.SendPropertyChanged("UnitPrice");
					this.OnUnitPriceChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CurrencyUnitId", DbType="Int")]
		public System.Nullable<int> CurrencyUnitId
		{
			get
			{
				return this._CurrencyUnitId;
			}
			set
			{
				if ((this._CurrencyUnitId != value))
				{
					if (this._CurrencyUnit.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnCurrencyUnitIdChanging(value);
					this.SendPropertyChanging();
					this._CurrencyUnitId = value;
					this.SendPropertyChanged("CurrencyUnitId");
					this.OnCurrencyUnitIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Product_InputOrderDetail", Storage="_InputOrderDetails", ThisKey="Id", OtherKey="ProductId")]
		public EntitySet<InputOrderDetail> InputOrderDetails
		{
			get
			{
				return this._InputOrderDetails;
			}
			set
			{
				this._InputOrderDetails.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Product_AssignedDeliveryOrderDetail", Storage="_AssignedDeliveryOrderDetails", ThisKey="Id", OtherKey="ProductId")]
		public EntitySet<AssignedDeliveryOrderDetail> AssignedDeliveryOrderDetails
		{
			get
			{
				return this._AssignedDeliveryOrderDetails;
			}
			set
			{
				this._AssignedDeliveryOrderDetails.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Product_ProductStorage", Storage="_ProductStorages", ThisKey="Id", OtherKey="ProductId")]
		public EntitySet<ProductStorage> ProductStorages
		{
			get
			{
				return this._ProductStorages;
			}
			set
			{
				this._ProductStorages.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Product_DeliveryOrderDetail", Storage="_DeliveryOrderDetails", ThisKey="Id", OtherKey="ProductId")]
		public EntitySet<DeliveryOrderDetail> DeliveryOrderDetails
		{
			get
			{
				return this._DeliveryOrderDetails;
			}
			set
			{
				this._DeliveryOrderDetails.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="CurrencyUnit_Product", Storage="_CurrencyUnit", ThisKey="CurrencyUnitId", OtherKey="Id", IsForeignKey=true)]
		public CurrencyUnit CurrencyUnit
		{
			get
			{
				return this._CurrencyUnit.Entity;
			}
			set
			{
				CurrencyUnit previousValue = this._CurrencyUnit.Entity;
				if (((previousValue != value) 
							|| (this._CurrencyUnit.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._CurrencyUnit.Entity = null;
						previousValue.Products.Remove(this);
					}
					this._CurrencyUnit.Entity = value;
					if ((value != null))
					{
						value.Products.Add(this);
						this._CurrencyUnitId = value.Id;
					}
					else
					{
						this._CurrencyUnitId = default(Nullable<int>);
					}
					this.SendPropertyChanged("CurrencyUnit");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="ProductType_Product", Storage="_ProductType", ThisKey="ProductTypeId", OtherKey="Id", IsForeignKey=true)]
		public ProductType ProductType
		{
			get
			{
				return this._ProductType.Entity;
			}
			set
			{
				ProductType previousValue = this._ProductType.Entity;
				if (((previousValue != value) 
							|| (this._ProductType.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._ProductType.Entity = null;
						previousValue.Products.Remove(this);
					}
					this._ProductType.Entity = value;
					if ((value != null))
					{
						value.Products.Add(this);
						this._ProductTypeId = value.Id;
					}
					else
					{
						this._ProductTypeId = default(Nullable<int>);
					}
					this.SendPropertyChanged("ProductType");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Company_Product", Storage="_Company", ThisKey="CompanyId", OtherKey="Id", IsForeignKey=true)]
		public Company Company
		{
			get
			{
				return this._Company.Entity;
			}
			set
			{
				Company previousValue = this._Company.Entity;
				if (((previousValue != value) 
							|| (this._Company.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Company.Entity = null;
						previousValue.Products.Remove(this);
					}
					this._Company.Entity = value;
					if ((value != null))
					{
						value.Products.Add(this);
						this._CompanyId = value.Id;
					}
					else
					{
						this._CompanyId = default(int);
					}
					this.SendPropertyChanged("Company");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_InputOrderDetails(InputOrderDetail entity)
		{
			this.SendPropertyChanging();
			entity.Product = this;
		}
		
		private void detach_InputOrderDetails(InputOrderDetail entity)
		{
			this.SendPropertyChanging();
			entity.Product = null;
		}
		
		private void attach_AssignedDeliveryOrderDetails(AssignedDeliveryOrderDetail entity)
		{
			this.SendPropertyChanging();
			entity.Product = this;
		}
		
		private void detach_AssignedDeliveryOrderDetails(AssignedDeliveryOrderDetail entity)
		{
			this.SendPropertyChanging();
			entity.Product = null;
		}
		
		private void attach_ProductStorages(ProductStorage entity)
		{
			this.SendPropertyChanging();
			entity.Product = this;
		}
		
		private void detach_ProductStorages(ProductStorage entity)
		{
			this.SendPropertyChanging();
			entity.Product = null;
		}
		
		private void attach_DeliveryOrderDetails(DeliveryOrderDetail entity)
		{
			this.SendPropertyChanging();
			entity.Product = this;
		}
		
		private void detach_DeliveryOrderDetails(DeliveryOrderDetail entity)
		{
			this.SendPropertyChanging();
			entity.Product = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.AssignedDeliveryOrderDetails")]
	public partial class AssignedDeliveryOrderDetail : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _Id;
		
		private int _DeliveryOrderId;
		
		private int _ProductId;
		
		private int _DeliveryCount;
		
		private System.Nullable<int> _ProductStorageId;
		
		private int _AssignCount;
		
		private System.Nullable<System.DateTime> _ProductDate;
		
		private string _LotsNumber;
		
		private string _InputInvoice;
		
		private string _CurrentProductNumber;
		
		private System.Nullable<int> _StorageAreaId;
		
		private bool _IsSucess;
		
		private string _CustomerPo;
		
		private EntityRef<DeliveryOrder> _DeliveryOrder;
		
		private EntityRef<Product> _Product;
		
		private EntityRef<ProductStorage> _ProductStorage;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIdChanging(int value);
    partial void OnIdChanged();
    partial void OnDeliveryOrderIdChanging(int value);
    partial void OnDeliveryOrderIdChanged();
    partial void OnProductIdChanging(int value);
    partial void OnProductIdChanged();
    partial void OnDeliveryCountChanging(int value);
    partial void OnDeliveryCountChanged();
    partial void OnProductStorageIdChanging(System.Nullable<int> value);
    partial void OnProductStorageIdChanged();
    partial void OnAssignCountChanging(int value);
    partial void OnAssignCountChanged();
    partial void OnProductDateChanging(System.Nullable<System.DateTime> value);
    partial void OnProductDateChanged();
    partial void OnLotsNumberChanging(string value);
    partial void OnLotsNumberChanged();
    partial void OnInputInvoiceChanging(string value);
    partial void OnInputInvoiceChanged();
    partial void OnCurrentProductNumberChanging(string value);
    partial void OnCurrentProductNumberChanged();
    partial void OnStorageAreaIdChanging(System.Nullable<int> value);
    partial void OnStorageAreaIdChanged();
    partial void OnIsSucessChanging(bool value);
    partial void OnIsSucessChanged();
    partial void OnCustomerPoChanging(string value);
    partial void OnCustomerPoChanged();
    #endregion
		
		public AssignedDeliveryOrderDetail()
		{
			this._DeliveryOrder = default(EntityRef<DeliveryOrder>);
			this._Product = default(EntityRef<Product>);
			this._ProductStorage = default(EntityRef<ProductStorage>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Id", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int Id
		{
			get
			{
				return this._Id;
			}
			set
			{
				if ((this._Id != value))
				{
					this.OnIdChanging(value);
					this.SendPropertyChanging();
					this._Id = value;
					this.SendPropertyChanged("Id");
					this.OnIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DeliveryOrderId", DbType="Int NOT NULL")]
		public int DeliveryOrderId
		{
			get
			{
				return this._DeliveryOrderId;
			}
			set
			{
				if ((this._DeliveryOrderId != value))
				{
					if (this._DeliveryOrder.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnDeliveryOrderIdChanging(value);
					this.SendPropertyChanging();
					this._DeliveryOrderId = value;
					this.SendPropertyChanged("DeliveryOrderId");
					this.OnDeliveryOrderIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ProductId", DbType="Int NOT NULL")]
		public int ProductId
		{
			get
			{
				return this._ProductId;
			}
			set
			{
				if ((this._ProductId != value))
				{
					if (this._Product.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnProductIdChanging(value);
					this.SendPropertyChanging();
					this._ProductId = value;
					this.SendPropertyChanged("ProductId");
					this.OnProductIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DeliveryCount", DbType="Int NOT NULL")]
		public int DeliveryCount
		{
			get
			{
				return this._DeliveryCount;
			}
			set
			{
				if ((this._DeliveryCount != value))
				{
					this.OnDeliveryCountChanging(value);
					this.SendPropertyChanging();
					this._DeliveryCount = value;
					this.SendPropertyChanged("DeliveryCount");
					this.OnDeliveryCountChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ProductStorageId", DbType="Int")]
		public System.Nullable<int> ProductStorageId
		{
			get
			{
				return this._ProductStorageId;
			}
			set
			{
				if ((this._ProductStorageId != value))
				{
					if (this._ProductStorage.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnProductStorageIdChanging(value);
					this.SendPropertyChanging();
					this._ProductStorageId = value;
					this.SendPropertyChanged("ProductStorageId");
					this.OnProductStorageIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_AssignCount", DbType="Int NOT NULL")]
		public int AssignCount
		{
			get
			{
				return this._AssignCount;
			}
			set
			{
				if ((this._AssignCount != value))
				{
					this.OnAssignCountChanging(value);
					this.SendPropertyChanging();
					this._AssignCount = value;
					this.SendPropertyChanged("AssignCount");
					this.OnAssignCountChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ProductDate", DbType="DateTime")]
		public System.Nullable<System.DateTime> ProductDate
		{
			get
			{
				return this._ProductDate;
			}
			set
			{
				if ((this._ProductDate != value))
				{
					this.OnProductDateChanging(value);
					this.SendPropertyChanging();
					this._ProductDate = value;
					this.SendPropertyChanged("ProductDate");
					this.OnProductDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_LotsNumber", DbType="NVarChar(50)")]
		public string LotsNumber
		{
			get
			{
				return this._LotsNumber;
			}
			set
			{
				if ((this._LotsNumber != value))
				{
					this.OnLotsNumberChanging(value);
					this.SendPropertyChanging();
					this._LotsNumber = value;
					this.SendPropertyChanged("LotsNumber");
					this.OnLotsNumberChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_InputInvoice", DbType="NVarChar(50)")]
		public string InputInvoice
		{
			get
			{
				return this._InputInvoice;
			}
			set
			{
				if ((this._InputInvoice != value))
				{
					this.OnInputInvoiceChanging(value);
					this.SendPropertyChanging();
					this._InputInvoice = value;
					this.SendPropertyChanged("InputInvoice");
					this.OnInputInvoiceChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CurrentProductNumber", DbType="NVarChar(50)")]
		public string CurrentProductNumber
		{
			get
			{
				return this._CurrentProductNumber;
			}
			set
			{
				if ((this._CurrentProductNumber != value))
				{
					this.OnCurrentProductNumberChanging(value);
					this.SendPropertyChanging();
					this._CurrentProductNumber = value;
					this.SendPropertyChanged("CurrentProductNumber");
					this.OnCurrentProductNumberChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_StorageAreaId", DbType="Int")]
		public System.Nullable<int> StorageAreaId
		{
			get
			{
				return this._StorageAreaId;
			}
			set
			{
				if ((this._StorageAreaId != value))
				{
					this.OnStorageAreaIdChanging(value);
					this.SendPropertyChanging();
					this._StorageAreaId = value;
					this.SendPropertyChanged("StorageAreaId");
					this.OnStorageAreaIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IsSucess", DbType="Bit NOT NULL")]
		public bool IsSucess
		{
			get
			{
				return this._IsSucess;
			}
			set
			{
				if ((this._IsSucess != value))
				{
					this.OnIsSucessChanging(value);
					this.SendPropertyChanging();
					this._IsSucess = value;
					this.SendPropertyChanged("IsSucess");
					this.OnIsSucessChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CustomerPo", DbType="NVarChar(255)")]
		public string CustomerPo
		{
			get
			{
				return this._CustomerPo;
			}
			set
			{
				if ((this._CustomerPo != value))
				{
					this.OnCustomerPoChanging(value);
					this.SendPropertyChanging();
					this._CustomerPo = value;
					this.SendPropertyChanged("CustomerPo");
					this.OnCustomerPoChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="DeliveryOrder_AssignedDeliveryOrderDetail", Storage="_DeliveryOrder", ThisKey="DeliveryOrderId", OtherKey="Id", IsForeignKey=true)]
		public DeliveryOrder DeliveryOrder
		{
			get
			{
				return this._DeliveryOrder.Entity;
			}
			set
			{
				DeliveryOrder previousValue = this._DeliveryOrder.Entity;
				if (((previousValue != value) 
							|| (this._DeliveryOrder.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._DeliveryOrder.Entity = null;
						previousValue.AssignedDeliveryOrderDetails.Remove(this);
					}
					this._DeliveryOrder.Entity = value;
					if ((value != null))
					{
						value.AssignedDeliveryOrderDetails.Add(this);
						this._DeliveryOrderId = value.Id;
					}
					else
					{
						this._DeliveryOrderId = default(int);
					}
					this.SendPropertyChanged("DeliveryOrder");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Product_AssignedDeliveryOrderDetail", Storage="_Product", ThisKey="ProductId", OtherKey="Id", IsForeignKey=true)]
		public Product Product
		{
			get
			{
				return this._Product.Entity;
			}
			set
			{
				Product previousValue = this._Product.Entity;
				if (((previousValue != value) 
							|| (this._Product.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Product.Entity = null;
						previousValue.AssignedDeliveryOrderDetails.Remove(this);
					}
					this._Product.Entity = value;
					if ((value != null))
					{
						value.AssignedDeliveryOrderDetails.Add(this);
						this._ProductId = value.Id;
					}
					else
					{
						this._ProductId = default(int);
					}
					this.SendPropertyChanged("Product");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="ProductStorage_AssignedDeliveryOrderDetail", Storage="_ProductStorage", ThisKey="ProductStorageId", OtherKey="Id", IsForeignKey=true)]
		public ProductStorage ProductStorage
		{
			get
			{
				return this._ProductStorage.Entity;
			}
			set
			{
				ProductStorage previousValue = this._ProductStorage.Entity;
				if (((previousValue != value) 
							|| (this._ProductStorage.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._ProductStorage.Entity = null;
						previousValue.AssignedDeliveryOrderDetails.Remove(this);
					}
					this._ProductStorage.Entity = value;
					if ((value != null))
					{
						value.AssignedDeliveryOrderDetails.Add(this);
						this._ProductStorageId = value.Id;
					}
					else
					{
						this._ProductStorageId = default(Nullable<int>);
					}
					this.SendPropertyChanged("ProductStorage");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.StorageRacks")]
	public partial class StorageRack : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _id;
		
		private string _RackName;
		
		private int _RackTypeID;
		
		private int _RackAreaID;
		
		private int _Row;
		
		private string _Remark;
		
		private int _StorageID;
		
		private bool _IsLocked;
		
		private EntitySet<StorageArea> _StorageAreas;
		
		private EntityRef<RackArea> _RackArea;
		
		private EntityRef<RackType> _RackType;
		
		private EntityRef<Storage> _Storage;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnidChanging(int value);
    partial void OnidChanged();
    partial void OnRackNameChanging(string value);
    partial void OnRackNameChanged();
    partial void OnRackTypeIDChanging(int value);
    partial void OnRackTypeIDChanged();
    partial void OnRackAreaIDChanging(int value);
    partial void OnRackAreaIDChanged();
    partial void OnRowChanging(int value);
    partial void OnRowChanged();
    partial void OnRemarkChanging(string value);
    partial void OnRemarkChanged();
    partial void OnStorageIDChanging(int value);
    partial void OnStorageIDChanged();
    partial void OnIsLockedChanging(bool value);
    partial void OnIsLockedChanged();
    #endregion
		
		public StorageRack()
		{
			this._StorageAreas = new EntitySet<StorageArea>(new Action<StorageArea>(this.attach_StorageAreas), new Action<StorageArea>(this.detach_StorageAreas));
			this._RackArea = default(EntityRef<RackArea>);
			this._RackType = default(EntityRef<RackType>);
			this._Storage = default(EntityRef<Storage>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_id", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int id
		{
			get
			{
				return this._id;
			}
			set
			{
				if ((this._id != value))
				{
					this.OnidChanging(value);
					this.SendPropertyChanging();
					this._id = value;
					this.SendPropertyChanged("id");
					this.OnidChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_RackName", DbType="NVarChar(255) NOT NULL", CanBeNull=false)]
		public string RackName
		{
			get
			{
				return this._RackName;
			}
			set
			{
				if ((this._RackName != value))
				{
					this.OnRackNameChanging(value);
					this.SendPropertyChanging();
					this._RackName = value;
					this.SendPropertyChanged("RackName");
					this.OnRackNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_RackTypeID", DbType="Int NOT NULL")]
		public int RackTypeID
		{
			get
			{
				return this._RackTypeID;
			}
			set
			{
				if ((this._RackTypeID != value))
				{
					if (this._RackType.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnRackTypeIDChanging(value);
					this.SendPropertyChanging();
					this._RackTypeID = value;
					this.SendPropertyChanged("RackTypeID");
					this.OnRackTypeIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_RackAreaID", DbType="Int NOT NULL")]
		public int RackAreaID
		{
			get
			{
				return this._RackAreaID;
			}
			set
			{
				if ((this._RackAreaID != value))
				{
					if (this._RackArea.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnRackAreaIDChanging(value);
					this.SendPropertyChanging();
					this._RackAreaID = value;
					this.SendPropertyChanged("RackAreaID");
					this.OnRackAreaIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Row", DbType="Int NOT NULL")]
		public int Row
		{
			get
			{
				return this._Row;
			}
			set
			{
				if ((this._Row != value))
				{
					this.OnRowChanging(value);
					this.SendPropertyChanging();
					this._Row = value;
					this.SendPropertyChanged("Row");
					this.OnRowChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Remark", DbType="NVarChar(255)")]
		public string Remark
		{
			get
			{
				return this._Remark;
			}
			set
			{
				if ((this._Remark != value))
				{
					this.OnRemarkChanging(value);
					this.SendPropertyChanging();
					this._Remark = value;
					this.SendPropertyChanged("Remark");
					this.OnRemarkChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_StorageID", DbType="Int NOT NULL")]
		public int StorageID
		{
			get
			{
				return this._StorageID;
			}
			set
			{
				if ((this._StorageID != value))
				{
					if (this._Storage.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnStorageIDChanging(value);
					this.SendPropertyChanging();
					this._StorageID = value;
					this.SendPropertyChanged("StorageID");
					this.OnStorageIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IsLocked", DbType="Bit NOT NULL")]
		public bool IsLocked
		{
			get
			{
				return this._IsLocked;
			}
			set
			{
				if ((this._IsLocked != value))
				{
					this.OnIsLockedChanging(value);
					this.SendPropertyChanging();
					this._IsLocked = value;
					this.SendPropertyChanged("IsLocked");
					this.OnIsLockedChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="StorageRack_StorageArea", Storage="_StorageAreas", ThisKey="id", OtherKey="StorageRackId")]
		public EntitySet<StorageArea> StorageAreas
		{
			get
			{
				return this._StorageAreas;
			}
			set
			{
				this._StorageAreas.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="RackArea_StorageRack", Storage="_RackArea", ThisKey="RackAreaID", OtherKey="id", IsForeignKey=true)]
		public RackArea RackArea
		{
			get
			{
				return this._RackArea.Entity;
			}
			set
			{
				RackArea previousValue = this._RackArea.Entity;
				if (((previousValue != value) 
							|| (this._RackArea.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._RackArea.Entity = null;
						previousValue.StorageRacks.Remove(this);
					}
					this._RackArea.Entity = value;
					if ((value != null))
					{
						value.StorageRacks.Add(this);
						this._RackAreaID = value.id;
					}
					else
					{
						this._RackAreaID = default(int);
					}
					this.SendPropertyChanged("RackArea");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="RackType_StorageRack", Storage="_RackType", ThisKey="RackTypeID", OtherKey="id", IsForeignKey=true)]
		public RackType RackType
		{
			get
			{
				return this._RackType.Entity;
			}
			set
			{
				RackType previousValue = this._RackType.Entity;
				if (((previousValue != value) 
							|| (this._RackType.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._RackType.Entity = null;
						previousValue.StorageRacks.Remove(this);
					}
					this._RackType.Entity = value;
					if ((value != null))
					{
						value.StorageRacks.Add(this);
						this._RackTypeID = value.id;
					}
					else
					{
						this._RackTypeID = default(int);
					}
					this.SendPropertyChanged("RackType");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Storage_StorageRack", Storage="_Storage", ThisKey="StorageID", OtherKey="Id", IsForeignKey=true)]
		public Storage Storage
		{
			get
			{
				return this._Storage.Entity;
			}
			set
			{
				Storage previousValue = this._Storage.Entity;
				if (((previousValue != value) 
							|| (this._Storage.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Storage.Entity = null;
						previousValue.StorageRacks.Remove(this);
					}
					this._Storage.Entity = value;
					if ((value != null))
					{
						value.StorageRacks.Add(this);
						this._StorageID = value.Id;
					}
					else
					{
						this._StorageID = default(int);
					}
					this.SendPropertyChanged("Storage");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_StorageAreas(StorageArea entity)
		{
			this.SendPropertyChanging();
			entity.StorageRack = this;
		}
		
		private void detach_StorageAreas(StorageArea entity)
		{
			this.SendPropertyChanging();
			entity.StorageRack = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.ProductStorages")]
	public partial class ProductStorage : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _Id;
		
		private int _CompanyId;
		
		private int _InputDetailId;
		
		private int _ProductId;
		
		private string _CurrentProductNumber;
		
		private System.DateTime _EntryDate;
		
		private int _OriginalCount;
		
		private int _CurrentCount;
		
		private int _UsableCount;
		
		private int _AreaId;
		
		private string _Memo;
		
		private System.Nullable<System.DateTime> _ProductDate;
		
		private string _LotsNumber;
		
		private System.DateTime _UpdateDate;
		
		private string _UpdateUser;
		
		private string _EntryUser;
		
		private int _Status;
		
		private EntitySet<AssignedDeliveryOrderDetail> _AssignedDeliveryOrderDetails;
		
		private EntitySet<ProductStorageChange> _ProductStorageChanges;
		
		private EntitySet<DeliveryOrderDetail> _DeliveryOrderDetails;
		
		private EntityRef<Company> _Company;
		
		private EntityRef<InputOrderDetail> _InputOrderDetail;
		
		private EntityRef<Product> _Product;
		
		private EntityRef<StorageArea> _StorageArea;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIdChanging(int value);
    partial void OnIdChanged();
    partial void OnCompanyIdChanging(int value);
    partial void OnCompanyIdChanged();
    partial void OnInputDetailIdChanging(int value);
    partial void OnInputDetailIdChanged();
    partial void OnProductIdChanging(int value);
    partial void OnProductIdChanged();
    partial void OnCurrentProductNumberChanging(string value);
    partial void OnCurrentProductNumberChanged();
    partial void OnEntryDateChanging(System.DateTime value);
    partial void OnEntryDateChanged();
    partial void OnOriginalCountChanging(int value);
    partial void OnOriginalCountChanged();
    partial void OnCurrentCountChanging(int value);
    partial void OnCurrentCountChanged();
    partial void OnUsableCountChanging(int value);
    partial void OnUsableCountChanged();
    partial void OnAreaIdChanging(int value);
    partial void OnAreaIdChanged();
    partial void OnMemoChanging(string value);
    partial void OnMemoChanged();
    partial void OnProductDateChanging(System.Nullable<System.DateTime> value);
    partial void OnProductDateChanged();
    partial void OnLotsNumberChanging(string value);
    partial void OnLotsNumberChanged();
    partial void OnUpdateDateChanging(System.DateTime value);
    partial void OnUpdateDateChanged();
    partial void OnUpdateUserChanging(string value);
    partial void OnUpdateUserChanged();
    partial void OnEntryUserChanging(string value);
    partial void OnEntryUserChanged();
    partial void OnStatusChanging(int value);
    partial void OnStatusChanged();
    #endregion
		
		public ProductStorage()
		{
			this._AssignedDeliveryOrderDetails = new EntitySet<AssignedDeliveryOrderDetail>(new Action<AssignedDeliveryOrderDetail>(this.attach_AssignedDeliveryOrderDetails), new Action<AssignedDeliveryOrderDetail>(this.detach_AssignedDeliveryOrderDetails));
			this._ProductStorageChanges = new EntitySet<ProductStorageChange>(new Action<ProductStorageChange>(this.attach_ProductStorageChanges), new Action<ProductStorageChange>(this.detach_ProductStorageChanges));
			this._DeliveryOrderDetails = new EntitySet<DeliveryOrderDetail>(new Action<DeliveryOrderDetail>(this.attach_DeliveryOrderDetails), new Action<DeliveryOrderDetail>(this.detach_DeliveryOrderDetails));
			this._Company = default(EntityRef<Company>);
			this._InputOrderDetail = default(EntityRef<InputOrderDetail>);
			this._Product = default(EntityRef<Product>);
			this._StorageArea = default(EntityRef<StorageArea>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Id", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int Id
		{
			get
			{
				return this._Id;
			}
			set
			{
				if ((this._Id != value))
				{
					this.OnIdChanging(value);
					this.SendPropertyChanging();
					this._Id = value;
					this.SendPropertyChanged("Id");
					this.OnIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CompanyId", DbType="Int NOT NULL")]
		public int CompanyId
		{
			get
			{
				return this._CompanyId;
			}
			set
			{
				if ((this._CompanyId != value))
				{
					if (this._Company.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnCompanyIdChanging(value);
					this.SendPropertyChanging();
					this._CompanyId = value;
					this.SendPropertyChanged("CompanyId");
					this.OnCompanyIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_InputDetailId", DbType="Int NOT NULL")]
		public int InputDetailId
		{
			get
			{
				return this._InputDetailId;
			}
			set
			{
				if ((this._InputDetailId != value))
				{
					if (this._InputOrderDetail.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnInputDetailIdChanging(value);
					this.SendPropertyChanging();
					this._InputDetailId = value;
					this.SendPropertyChanged("InputDetailId");
					this.OnInputDetailIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ProductId", DbType="Int NOT NULL")]
		public int ProductId
		{
			get
			{
				return this._ProductId;
			}
			set
			{
				if ((this._ProductId != value))
				{
					if (this._Product.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnProductIdChanging(value);
					this.SendPropertyChanging();
					this._ProductId = value;
					this.SendPropertyChanged("ProductId");
					this.OnProductIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CurrentProductNumber", DbType="NVarChar(50) NOT NULL", CanBeNull=false)]
		public string CurrentProductNumber
		{
			get
			{
				return this._CurrentProductNumber;
			}
			set
			{
				if ((this._CurrentProductNumber != value))
				{
					this.OnCurrentProductNumberChanging(value);
					this.SendPropertyChanging();
					this._CurrentProductNumber = value;
					this.SendPropertyChanged("CurrentProductNumber");
					this.OnCurrentProductNumberChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_EntryDate", DbType="DateTime NOT NULL")]
		public System.DateTime EntryDate
		{
			get
			{
				return this._EntryDate;
			}
			set
			{
				if ((this._EntryDate != value))
				{
					this.OnEntryDateChanging(value);
					this.SendPropertyChanging();
					this._EntryDate = value;
					this.SendPropertyChanged("EntryDate");
					this.OnEntryDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_OriginalCount", DbType="Int NOT NULL")]
		public int OriginalCount
		{
			get
			{
				return this._OriginalCount;
			}
			set
			{
				if ((this._OriginalCount != value))
				{
					this.OnOriginalCountChanging(value);
					this.SendPropertyChanging();
					this._OriginalCount = value;
					this.SendPropertyChanged("OriginalCount");
					this.OnOriginalCountChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CurrentCount", DbType="Int NOT NULL")]
		public int CurrentCount
		{
			get
			{
				return this._CurrentCount;
			}
			set
			{
				if ((this._CurrentCount != value))
				{
					this.OnCurrentCountChanging(value);
					this.SendPropertyChanging();
					this._CurrentCount = value;
					this.SendPropertyChanged("CurrentCount");
					this.OnCurrentCountChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_UsableCount", DbType="Int NOT NULL")]
		public int UsableCount
		{
			get
			{
				return this._UsableCount;
			}
			set
			{
				if ((this._UsableCount != value))
				{
					this.OnUsableCountChanging(value);
					this.SendPropertyChanging();
					this._UsableCount = value;
					this.SendPropertyChanged("UsableCount");
					this.OnUsableCountChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_AreaId", DbType="Int NOT NULL")]
		public int AreaId
		{
			get
			{
				return this._AreaId;
			}
			set
			{
				if ((this._AreaId != value))
				{
					if (this._StorageArea.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnAreaIdChanging(value);
					this.SendPropertyChanging();
					this._AreaId = value;
					this.SendPropertyChanged("AreaId");
					this.OnAreaIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Memo", DbType="NVarChar(1000)")]
		public string Memo
		{
			get
			{
				return this._Memo;
			}
			set
			{
				if ((this._Memo != value))
				{
					this.OnMemoChanging(value);
					this.SendPropertyChanging();
					this._Memo = value;
					this.SendPropertyChanged("Memo");
					this.OnMemoChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ProductDate", DbType="DateTime")]
		public System.Nullable<System.DateTime> ProductDate
		{
			get
			{
				return this._ProductDate;
			}
			set
			{
				if ((this._ProductDate != value))
				{
					this.OnProductDateChanging(value);
					this.SendPropertyChanging();
					this._ProductDate = value;
					this.SendPropertyChanged("ProductDate");
					this.OnProductDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_LotsNumber", DbType="NVarChar(50) NOT NULL", CanBeNull=false)]
		public string LotsNumber
		{
			get
			{
				return this._LotsNumber;
			}
			set
			{
				if ((this._LotsNumber != value))
				{
					this.OnLotsNumberChanging(value);
					this.SendPropertyChanging();
					this._LotsNumber = value;
					this.SendPropertyChanged("LotsNumber");
					this.OnLotsNumberChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_UpdateDate", DbType="DateTime NOT NULL")]
		public System.DateTime UpdateDate
		{
			get
			{
				return this._UpdateDate;
			}
			set
			{
				if ((this._UpdateDate != value))
				{
					this.OnUpdateDateChanging(value);
					this.SendPropertyChanging();
					this._UpdateDate = value;
					this.SendPropertyChanged("UpdateDate");
					this.OnUpdateDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_UpdateUser", DbType="NVarChar(500) NOT NULL", CanBeNull=false)]
		public string UpdateUser
		{
			get
			{
				return this._UpdateUser;
			}
			set
			{
				if ((this._UpdateUser != value))
				{
					this.OnUpdateUserChanging(value);
					this.SendPropertyChanging();
					this._UpdateUser = value;
					this.SendPropertyChanged("UpdateUser");
					this.OnUpdateUserChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_EntryUser", DbType="NVarChar(500) NOT NULL", CanBeNull=false)]
		public string EntryUser
		{
			get
			{
				return this._EntryUser;
			}
			set
			{
				if ((this._EntryUser != value))
				{
					this.OnEntryUserChanging(value);
					this.SendPropertyChanging();
					this._EntryUser = value;
					this.SendPropertyChanged("EntryUser");
					this.OnEntryUserChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Status", DbType="Int NOT NULL")]
		public int Status
		{
			get
			{
				return this._Status;
			}
			set
			{
				if ((this._Status != value))
				{
					this.OnStatusChanging(value);
					this.SendPropertyChanging();
					this._Status = value;
					this.SendPropertyChanged("Status");
					this.OnStatusChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="ProductStorage_AssignedDeliveryOrderDetail", Storage="_AssignedDeliveryOrderDetails", ThisKey="Id", OtherKey="ProductStorageId")]
		public EntitySet<AssignedDeliveryOrderDetail> AssignedDeliveryOrderDetails
		{
			get
			{
				return this._AssignedDeliveryOrderDetails;
			}
			set
			{
				this._AssignedDeliveryOrderDetails.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="ProductStorage_ProductStorageChange", Storage="_ProductStorageChanges", ThisKey="Id", OtherKey="ProductStorageID")]
		public EntitySet<ProductStorageChange> ProductStorageChanges
		{
			get
			{
				return this._ProductStorageChanges;
			}
			set
			{
				this._ProductStorageChanges.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="ProductStorage_DeliveryOrderDetail", Storage="_DeliveryOrderDetails", ThisKey="Id", OtherKey="ProductStorageId")]
		public EntitySet<DeliveryOrderDetail> DeliveryOrderDetails
		{
			get
			{
				return this._DeliveryOrderDetails;
			}
			set
			{
				this._DeliveryOrderDetails.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Company_ProductStorage", Storage="_Company", ThisKey="CompanyId", OtherKey="Id", IsForeignKey=true)]
		public Company Company
		{
			get
			{
				return this._Company.Entity;
			}
			set
			{
				Company previousValue = this._Company.Entity;
				if (((previousValue != value) 
							|| (this._Company.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Company.Entity = null;
						previousValue.ProductStorages.Remove(this);
					}
					this._Company.Entity = value;
					if ((value != null))
					{
						value.ProductStorages.Add(this);
						this._CompanyId = value.Id;
					}
					else
					{
						this._CompanyId = default(int);
					}
					this.SendPropertyChanged("Company");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="InputOrderDetail_ProductStorage", Storage="_InputOrderDetail", ThisKey="InputDetailId", OtherKey="ID", IsForeignKey=true)]
		public InputOrderDetail InputOrderDetail
		{
			get
			{
				return this._InputOrderDetail.Entity;
			}
			set
			{
				InputOrderDetail previousValue = this._InputOrderDetail.Entity;
				if (((previousValue != value) 
							|| (this._InputOrderDetail.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._InputOrderDetail.Entity = null;
						previousValue.ProductStorages.Remove(this);
					}
					this._InputOrderDetail.Entity = value;
					if ((value != null))
					{
						value.ProductStorages.Add(this);
						this._InputDetailId = value.ID;
					}
					else
					{
						this._InputDetailId = default(int);
					}
					this.SendPropertyChanged("InputOrderDetail");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Product_ProductStorage", Storage="_Product", ThisKey="ProductId", OtherKey="Id", IsForeignKey=true)]
		public Product Product
		{
			get
			{
				return this._Product.Entity;
			}
			set
			{
				Product previousValue = this._Product.Entity;
				if (((previousValue != value) 
							|| (this._Product.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Product.Entity = null;
						previousValue.ProductStorages.Remove(this);
					}
					this._Product.Entity = value;
					if ((value != null))
					{
						value.ProductStorages.Add(this);
						this._ProductId = value.Id;
					}
					else
					{
						this._ProductId = default(int);
					}
					this.SendPropertyChanged("Product");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="StorageArea_ProductStorage", Storage="_StorageArea", ThisKey="AreaId", OtherKey="Id", IsForeignKey=true)]
		public StorageArea StorageArea
		{
			get
			{
				return this._StorageArea.Entity;
			}
			set
			{
				StorageArea previousValue = this._StorageArea.Entity;
				if (((previousValue != value) 
							|| (this._StorageArea.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._StorageArea.Entity = null;
						previousValue.ProductStorages.Remove(this);
					}
					this._StorageArea.Entity = value;
					if ((value != null))
					{
						value.ProductStorages.Add(this);
						this._AreaId = value.Id;
					}
					else
					{
						this._AreaId = default(int);
					}
					this.SendPropertyChanged("StorageArea");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_AssignedDeliveryOrderDetails(AssignedDeliveryOrderDetail entity)
		{
			this.SendPropertyChanging();
			entity.ProductStorage = this;
		}
		
		private void detach_AssignedDeliveryOrderDetails(AssignedDeliveryOrderDetail entity)
		{
			this.SendPropertyChanging();
			entity.ProductStorage = null;
		}
		
		private void attach_ProductStorageChanges(ProductStorageChange entity)
		{
			this.SendPropertyChanging();
			entity.ProductStorage = this;
		}
		
		private void detach_ProductStorageChanges(ProductStorageChange entity)
		{
			this.SendPropertyChanging();
			entity.ProductStorage = null;
		}
		
		private void attach_DeliveryOrderDetails(DeliveryOrderDetail entity)
		{
			this.SendPropertyChanging();
			entity.ProductStorage = this;
		}
		
		private void detach_DeliveryOrderDetails(DeliveryOrderDetail entity)
		{
			this.SendPropertyChanging();
			entity.ProductStorage = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.ProductStorageChanges")]
	public partial class ProductStorageChange : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _ID;
		
		private int _ProductStorageID;
		
		private int _OriginalCount;
		
		private int _OriginalCount_Org;
		
		private int _CurrentCount;
		
		private int _CurrentCount_Org;
		
		private int _UsableCount;
		
		private int _UsableCount_Org;
		
		private int _AreaId;
		
		private int _AreaId_Org;
		
		private System.Nullable<System.DateTime> _EntryDate;
		
		private System.Nullable<System.DateTime> _EntryDate_Org;
		
		private string _LotsNumber;
		
		private string _LotsNumber_Org;
		
		private System.Nullable<System.DateTime> _ProductDate;
		
		private System.Nullable<System.DateTime> _ProductDate_Org;
		
		private System.DateTime _UpdateDate;
		
		private int _Status;
		
		private EntityRef<ProductStorage> _ProductStorage;
		
		private EntityRef<StorageArea> _StorageArea;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIDChanging(int value);
    partial void OnIDChanged();
    partial void OnProductStorageIDChanging(int value);
    partial void OnProductStorageIDChanged();
    partial void OnOriginalCountChanging(int value);
    partial void OnOriginalCountChanged();
    partial void OnOriginalCount_OrgChanging(int value);
    partial void OnOriginalCount_OrgChanged();
    partial void OnCurrentCountChanging(int value);
    partial void OnCurrentCountChanged();
    partial void OnCurrentCount_OrgChanging(int value);
    partial void OnCurrentCount_OrgChanged();
    partial void OnUsableCountChanging(int value);
    partial void OnUsableCountChanged();
    partial void OnUsableCount_OrgChanging(int value);
    partial void OnUsableCount_OrgChanged();
    partial void OnAreaIdChanging(int value);
    partial void OnAreaIdChanged();
    partial void OnAreaId_OrgChanging(int value);
    partial void OnAreaId_OrgChanged();
    partial void OnEntryDateChanging(System.Nullable<System.DateTime> value);
    partial void OnEntryDateChanged();
    partial void OnEntryDate_OrgChanging(System.Nullable<System.DateTime> value);
    partial void OnEntryDate_OrgChanged();
    partial void OnLotsNumberChanging(string value);
    partial void OnLotsNumberChanged();
    partial void OnLotsNumber_OrgChanging(string value);
    partial void OnLotsNumber_OrgChanged();
    partial void OnProductDateChanging(System.Nullable<System.DateTime> value);
    partial void OnProductDateChanged();
    partial void OnProductDate_OrgChanging(System.Nullable<System.DateTime> value);
    partial void OnProductDate_OrgChanged();
    partial void OnUpdateDateChanging(System.DateTime value);
    partial void OnUpdateDateChanged();
    partial void OnStatusChanging(int value);
    partial void OnStatusChanged();
    #endregion
		
		public ProductStorageChange()
		{
			this._ProductStorage = default(EntityRef<ProductStorage>);
			this._StorageArea = default(EntityRef<StorageArea>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ID", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int ID
		{
			get
			{
				return this._ID;
			}
			set
			{
				if ((this._ID != value))
				{
					this.OnIDChanging(value);
					this.SendPropertyChanging();
					this._ID = value;
					this.SendPropertyChanged("ID");
					this.OnIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ProductStorageID", DbType="Int NOT NULL")]
		public int ProductStorageID
		{
			get
			{
				return this._ProductStorageID;
			}
			set
			{
				if ((this._ProductStorageID != value))
				{
					if (this._ProductStorage.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnProductStorageIDChanging(value);
					this.SendPropertyChanging();
					this._ProductStorageID = value;
					this.SendPropertyChanged("ProductStorageID");
					this.OnProductStorageIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_OriginalCount", DbType="Int NOT NULL")]
		public int OriginalCount
		{
			get
			{
				return this._OriginalCount;
			}
			set
			{
				if ((this._OriginalCount != value))
				{
					this.OnOriginalCountChanging(value);
					this.SendPropertyChanging();
					this._OriginalCount = value;
					this.SendPropertyChanged("OriginalCount");
					this.OnOriginalCountChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_OriginalCount_Org", DbType="Int NOT NULL")]
		public int OriginalCount_Org
		{
			get
			{
				return this._OriginalCount_Org;
			}
			set
			{
				if ((this._OriginalCount_Org != value))
				{
					this.OnOriginalCount_OrgChanging(value);
					this.SendPropertyChanging();
					this._OriginalCount_Org = value;
					this.SendPropertyChanged("OriginalCount_Org");
					this.OnOriginalCount_OrgChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CurrentCount", DbType="Int NOT NULL")]
		public int CurrentCount
		{
			get
			{
				return this._CurrentCount;
			}
			set
			{
				if ((this._CurrentCount != value))
				{
					this.OnCurrentCountChanging(value);
					this.SendPropertyChanging();
					this._CurrentCount = value;
					this.SendPropertyChanged("CurrentCount");
					this.OnCurrentCountChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CurrentCount_Org", DbType="Int NOT NULL")]
		public int CurrentCount_Org
		{
			get
			{
				return this._CurrentCount_Org;
			}
			set
			{
				if ((this._CurrentCount_Org != value))
				{
					this.OnCurrentCount_OrgChanging(value);
					this.SendPropertyChanging();
					this._CurrentCount_Org = value;
					this.SendPropertyChanged("CurrentCount_Org");
					this.OnCurrentCount_OrgChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_UsableCount", DbType="Int NOT NULL")]
		public int UsableCount
		{
			get
			{
				return this._UsableCount;
			}
			set
			{
				if ((this._UsableCount != value))
				{
					this.OnUsableCountChanging(value);
					this.SendPropertyChanging();
					this._UsableCount = value;
					this.SendPropertyChanged("UsableCount");
					this.OnUsableCountChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_UsableCount_Org", DbType="Int NOT NULL")]
		public int UsableCount_Org
		{
			get
			{
				return this._UsableCount_Org;
			}
			set
			{
				if ((this._UsableCount_Org != value))
				{
					this.OnUsableCount_OrgChanging(value);
					this.SendPropertyChanging();
					this._UsableCount_Org = value;
					this.SendPropertyChanged("UsableCount_Org");
					this.OnUsableCount_OrgChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_AreaId", DbType="Int NOT NULL")]
		public int AreaId
		{
			get
			{
				return this._AreaId;
			}
			set
			{
				if ((this._AreaId != value))
				{
					if (this._StorageArea.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnAreaIdChanging(value);
					this.SendPropertyChanging();
					this._AreaId = value;
					this.SendPropertyChanged("AreaId");
					this.OnAreaIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_AreaId_Org", DbType="Int NOT NULL")]
		public int AreaId_Org
		{
			get
			{
				return this._AreaId_Org;
			}
			set
			{
				if ((this._AreaId_Org != value))
				{
					this.OnAreaId_OrgChanging(value);
					this.SendPropertyChanging();
					this._AreaId_Org = value;
					this.SendPropertyChanged("AreaId_Org");
					this.OnAreaId_OrgChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_EntryDate", DbType="DateTime")]
		public System.Nullable<System.DateTime> EntryDate
		{
			get
			{
				return this._EntryDate;
			}
			set
			{
				if ((this._EntryDate != value))
				{
					this.OnEntryDateChanging(value);
					this.SendPropertyChanging();
					this._EntryDate = value;
					this.SendPropertyChanged("EntryDate");
					this.OnEntryDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_EntryDate_Org", DbType="DateTime")]
		public System.Nullable<System.DateTime> EntryDate_Org
		{
			get
			{
				return this._EntryDate_Org;
			}
			set
			{
				if ((this._EntryDate_Org != value))
				{
					this.OnEntryDate_OrgChanging(value);
					this.SendPropertyChanging();
					this._EntryDate_Org = value;
					this.SendPropertyChanged("EntryDate_Org");
					this.OnEntryDate_OrgChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_LotsNumber", DbType="NVarChar(50)")]
		public string LotsNumber
		{
			get
			{
				return this._LotsNumber;
			}
			set
			{
				if ((this._LotsNumber != value))
				{
					this.OnLotsNumberChanging(value);
					this.SendPropertyChanging();
					this._LotsNumber = value;
					this.SendPropertyChanged("LotsNumber");
					this.OnLotsNumberChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_LotsNumber_Org", DbType="NVarChar(50)")]
		public string LotsNumber_Org
		{
			get
			{
				return this._LotsNumber_Org;
			}
			set
			{
				if ((this._LotsNumber_Org != value))
				{
					this.OnLotsNumber_OrgChanging(value);
					this.SendPropertyChanging();
					this._LotsNumber_Org = value;
					this.SendPropertyChanged("LotsNumber_Org");
					this.OnLotsNumber_OrgChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ProductDate", DbType="DateTime")]
		public System.Nullable<System.DateTime> ProductDate
		{
			get
			{
				return this._ProductDate;
			}
			set
			{
				if ((this._ProductDate != value))
				{
					this.OnProductDateChanging(value);
					this.SendPropertyChanging();
					this._ProductDate = value;
					this.SendPropertyChanged("ProductDate");
					this.OnProductDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ProductDate_Org", DbType="DateTime")]
		public System.Nullable<System.DateTime> ProductDate_Org
		{
			get
			{
				return this._ProductDate_Org;
			}
			set
			{
				if ((this._ProductDate_Org != value))
				{
					this.OnProductDate_OrgChanging(value);
					this.SendPropertyChanging();
					this._ProductDate_Org = value;
					this.SendPropertyChanged("ProductDate_Org");
					this.OnProductDate_OrgChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_UpdateDate", DbType="DateTime NOT NULL")]
		public System.DateTime UpdateDate
		{
			get
			{
				return this._UpdateDate;
			}
			set
			{
				if ((this._UpdateDate != value))
				{
					this.OnUpdateDateChanging(value);
					this.SendPropertyChanging();
					this._UpdateDate = value;
					this.SendPropertyChanged("UpdateDate");
					this.OnUpdateDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Status", DbType="Int NOT NULL")]
		public int Status
		{
			get
			{
				return this._Status;
			}
			set
			{
				if ((this._Status != value))
				{
					this.OnStatusChanging(value);
					this.SendPropertyChanging();
					this._Status = value;
					this.SendPropertyChanged("Status");
					this.OnStatusChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="ProductStorage_ProductStorageChange", Storage="_ProductStorage", ThisKey="ProductStorageID", OtherKey="Id", IsForeignKey=true)]
		public ProductStorage ProductStorage
		{
			get
			{
				return this._ProductStorage.Entity;
			}
			set
			{
				ProductStorage previousValue = this._ProductStorage.Entity;
				if (((previousValue != value) 
							|| (this._ProductStorage.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._ProductStorage.Entity = null;
						previousValue.ProductStorageChanges.Remove(this);
					}
					this._ProductStorage.Entity = value;
					if ((value != null))
					{
						value.ProductStorageChanges.Add(this);
						this._ProductStorageID = value.Id;
					}
					else
					{
						this._ProductStorageID = default(int);
					}
					this.SendPropertyChanged("ProductStorage");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="StorageArea_ProductStorageChange", Storage="_StorageArea", ThisKey="AreaId", OtherKey="Id", IsForeignKey=true)]
		public StorageArea StorageArea
		{
			get
			{
				return this._StorageArea.Entity;
			}
			set
			{
				StorageArea previousValue = this._StorageArea.Entity;
				if (((previousValue != value) 
							|| (this._StorageArea.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._StorageArea.Entity = null;
						previousValue.ProductStorageChanges.Remove(this);
					}
					this._StorageArea.Entity = value;
					if ((value != null))
					{
						value.ProductStorageChanges.Add(this);
						this._AreaId = value.Id;
					}
					else
					{
						this._AreaId = default(int);
					}
					this.SendPropertyChanged("StorageArea");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.DeliveryOrderDetails")]
	public partial class DeliveryOrderDetail : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _Id;
		
		private int _DeliveryOrderId;
		
		private int _ProductId;
		
		private int _DeliveryCount;
		
		private int _ProductStorageId;
		
		private int _AssignCount;
		
		private System.Nullable<System.DateTime> _ProductDate;
		
		private string _LotsNumber;
		
		private string _InputInvoice;
		
		private string _CustomerPo;
		
		private string _CurrentProductNumber;
		
		private EntityRef<DeliveryOrder> _DeliveryOrder;
		
		private EntityRef<Product> _Product;
		
		private EntityRef<ProductStorage> _ProductStorage;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIdChanging(int value);
    partial void OnIdChanged();
    partial void OnDeliveryOrderIdChanging(int value);
    partial void OnDeliveryOrderIdChanged();
    partial void OnProductIdChanging(int value);
    partial void OnProductIdChanged();
    partial void OnDeliveryCountChanging(int value);
    partial void OnDeliveryCountChanged();
    partial void OnProductStorageIdChanging(int value);
    partial void OnProductStorageIdChanged();
    partial void OnAssignCountChanging(int value);
    partial void OnAssignCountChanged();
    partial void OnProductDateChanging(System.Nullable<System.DateTime> value);
    partial void OnProductDateChanged();
    partial void OnLotsNumberChanging(string value);
    partial void OnLotsNumberChanged();
    partial void OnInputInvoiceChanging(string value);
    partial void OnInputInvoiceChanged();
    partial void OnCustomerPoChanging(string value);
    partial void OnCustomerPoChanged();
    partial void OnCurrentProductNumberChanging(string value);
    partial void OnCurrentProductNumberChanged();
    #endregion
		
		public DeliveryOrderDetail()
		{
			this._DeliveryOrder = default(EntityRef<DeliveryOrder>);
			this._Product = default(EntityRef<Product>);
			this._ProductStorage = default(EntityRef<ProductStorage>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Id", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int Id
		{
			get
			{
				return this._Id;
			}
			set
			{
				if ((this._Id != value))
				{
					this.OnIdChanging(value);
					this.SendPropertyChanging();
					this._Id = value;
					this.SendPropertyChanged("Id");
					this.OnIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DeliveryOrderId", DbType="Int NOT NULL")]
		public int DeliveryOrderId
		{
			get
			{
				return this._DeliveryOrderId;
			}
			set
			{
				if ((this._DeliveryOrderId != value))
				{
					if (this._DeliveryOrder.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnDeliveryOrderIdChanging(value);
					this.SendPropertyChanging();
					this._DeliveryOrderId = value;
					this.SendPropertyChanged("DeliveryOrderId");
					this.OnDeliveryOrderIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ProductId", DbType="Int NOT NULL")]
		public int ProductId
		{
			get
			{
				return this._ProductId;
			}
			set
			{
				if ((this._ProductId != value))
				{
					if (this._Product.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnProductIdChanging(value);
					this.SendPropertyChanging();
					this._ProductId = value;
					this.SendPropertyChanged("ProductId");
					this.OnProductIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DeliveryCount", DbType="Int NOT NULL")]
		public int DeliveryCount
		{
			get
			{
				return this._DeliveryCount;
			}
			set
			{
				if ((this._DeliveryCount != value))
				{
					this.OnDeliveryCountChanging(value);
					this.SendPropertyChanging();
					this._DeliveryCount = value;
					this.SendPropertyChanged("DeliveryCount");
					this.OnDeliveryCountChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ProductStorageId", DbType="Int NOT NULL")]
		public int ProductStorageId
		{
			get
			{
				return this._ProductStorageId;
			}
			set
			{
				if ((this._ProductStorageId != value))
				{
					if (this._ProductStorage.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnProductStorageIdChanging(value);
					this.SendPropertyChanging();
					this._ProductStorageId = value;
					this.SendPropertyChanged("ProductStorageId");
					this.OnProductStorageIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_AssignCount", DbType="Int NOT NULL")]
		public int AssignCount
		{
			get
			{
				return this._AssignCount;
			}
			set
			{
				if ((this._AssignCount != value))
				{
					this.OnAssignCountChanging(value);
					this.SendPropertyChanging();
					this._AssignCount = value;
					this.SendPropertyChanged("AssignCount");
					this.OnAssignCountChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ProductDate", DbType="DateTime")]
		public System.Nullable<System.DateTime> ProductDate
		{
			get
			{
				return this._ProductDate;
			}
			set
			{
				if ((this._ProductDate != value))
				{
					this.OnProductDateChanging(value);
					this.SendPropertyChanging();
					this._ProductDate = value;
					this.SendPropertyChanged("ProductDate");
					this.OnProductDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_LotsNumber", DbType="NVarChar(50)")]
		public string LotsNumber
		{
			get
			{
				return this._LotsNumber;
			}
			set
			{
				if ((this._LotsNumber != value))
				{
					this.OnLotsNumberChanging(value);
					this.SendPropertyChanging();
					this._LotsNumber = value;
					this.SendPropertyChanged("LotsNumber");
					this.OnLotsNumberChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_InputInvoice", DbType="NVarChar(50)")]
		public string InputInvoice
		{
			get
			{
				return this._InputInvoice;
			}
			set
			{
				if ((this._InputInvoice != value))
				{
					this.OnInputInvoiceChanging(value);
					this.SendPropertyChanging();
					this._InputInvoice = value;
					this.SendPropertyChanged("InputInvoice");
					this.OnInputInvoiceChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CustomerPo", DbType="NVarChar(255)")]
		public string CustomerPo
		{
			get
			{
				return this._CustomerPo;
			}
			set
			{
				if ((this._CustomerPo != value))
				{
					this.OnCustomerPoChanging(value);
					this.SendPropertyChanging();
					this._CustomerPo = value;
					this.SendPropertyChanged("CustomerPo");
					this.OnCustomerPoChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CurrentProductNumber", DbType="NVarChar(50)")]
		public string CurrentProductNumber
		{
			get
			{
				return this._CurrentProductNumber;
			}
			set
			{
				if ((this._CurrentProductNumber != value))
				{
					this.OnCurrentProductNumberChanging(value);
					this.SendPropertyChanging();
					this._CurrentProductNumber = value;
					this.SendPropertyChanged("CurrentProductNumber");
					this.OnCurrentProductNumberChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="DeliveryOrder_DeliveryOrderDetail", Storage="_DeliveryOrder", ThisKey="DeliveryOrderId", OtherKey="Id", IsForeignKey=true)]
		public DeliveryOrder DeliveryOrder
		{
			get
			{
				return this._DeliveryOrder.Entity;
			}
			set
			{
				DeliveryOrder previousValue = this._DeliveryOrder.Entity;
				if (((previousValue != value) 
							|| (this._DeliveryOrder.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._DeliveryOrder.Entity = null;
						previousValue.DeliveryOrderDetails.Remove(this);
					}
					this._DeliveryOrder.Entity = value;
					if ((value != null))
					{
						value.DeliveryOrderDetails.Add(this);
						this._DeliveryOrderId = value.Id;
					}
					else
					{
						this._DeliveryOrderId = default(int);
					}
					this.SendPropertyChanged("DeliveryOrder");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Product_DeliveryOrderDetail", Storage="_Product", ThisKey="ProductId", OtherKey="Id", IsForeignKey=true)]
		public Product Product
		{
			get
			{
				return this._Product.Entity;
			}
			set
			{
				Product previousValue = this._Product.Entity;
				if (((previousValue != value) 
							|| (this._Product.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Product.Entity = null;
						previousValue.DeliveryOrderDetails.Remove(this);
					}
					this._Product.Entity = value;
					if ((value != null))
					{
						value.DeliveryOrderDetails.Add(this);
						this._ProductId = value.Id;
					}
					else
					{
						this._ProductId = default(int);
					}
					this.SendPropertyChanged("Product");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="ProductStorage_DeliveryOrderDetail", Storage="_ProductStorage", ThisKey="ProductStorageId", OtherKey="Id", IsForeignKey=true)]
		public ProductStorage ProductStorage
		{
			get
			{
				return this._ProductStorage.Entity;
			}
			set
			{
				ProductStorage previousValue = this._ProductStorage.Entity;
				if (((previousValue != value) 
							|| (this._ProductStorage.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._ProductStorage.Entity = null;
						previousValue.DeliveryOrderDetails.Remove(this);
					}
					this._ProductStorage.Entity = value;
					if ((value != null))
					{
						value.DeliveryOrderDetails.Add(this);
						this._ProductStorageId = value.Id;
					}
					else
					{
						this._ProductStorageId = default(int);
					}
					this.SendPropertyChanged("ProductStorage");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
}
#pragma warning restore 1591
